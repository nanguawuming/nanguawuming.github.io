{"total":17,"pageSize":12,"pageCount":2,"data":[{"title":"WireShark过滤器语法和参考（中文版）说明手册","uid":"063a4b4785d156e93ebf4fc9f6bcc38f","slug":"wireshark","date":"2023-07-11T03:20:34.000Z","updated":"2023-08-10T03:39:47.152Z","comments":true,"path":"api/articles/wireshark.json","cover":"../picture/18.jpg","text":"Wireshark过滤器语法和参考概述Wireshark和TShark共享一个强大的过滤引擎，可以帮助去除数据包跟踪中的噪音，只显示您感兴趣的数据包。如果一个数据包满足您过滤器中的要求，它将显示在数据包列表中。显示过滤器可以让您比较协议中的字段与特定值，比较字段与字段，以及检查指...","link":"","photos":[],"count_time":{"symbolsCount":"8k","symbolsTime":"7 mins."},"categories":[{"name":"文章","slug":"文章","count":5,"path":"api/categories/文章.json"}],"tags":[{"name":"渗透工具","slug":"渗透工具","count":2,"path":"api/tags/渗透工具.json"},{"name":"wireshark","slug":"wireshark","count":1,"path":"api/tags/wireshark.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":"ture"},{"title":"ssti模板注入学习笔记-漏洞原理及漏洞应用","uid":"3137c2b6b2ca0e39e8c62639d966b498","slug":"ssti1","date":"2023-04-21T10:49:36.000Z","updated":"2023-05-19T09:54:13.469Z","comments":true,"path":"api/articles/ssti1.json","cover":"https://cdn.jsdelivr.net/gh/nanguawuming/CDN@1.0/picture/2.jpg","text":"ssti模板注入flask漏洞-代码不严谨可能造成任意文件读取和RCE远程控制控制后台系统 漏洞成因：~~ 渲染模板时，没有严格控制对用户的输入~~ 使用了危险的模板，导致用户可以和flask程序进行交互 flask是基于python开发的一种web框架，那么也就意味着如果用户可...","link":"","photos":[],"count_time":{"symbolsCount":"26k","symbolsTime":"23 mins."},"categories":[{"name":"文章","slug":"文章","count":5,"path":"api/categories/文章.json"}],"tags":[{"name":"ssti模板注入","slug":"ssti模板注入","count":2,"path":"api/tags/ssti模板注入.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"ssti模板注入学习笔记-flask前置知识","uid":"1e1792beaab2c135cf1beec290eff7af","slug":"flask_study","date":"2023-04-14T10:49:36.000Z","updated":"2023-05-10T11:44:14.126Z","comments":true,"path":"api/articles/flask_study.json","cover":"https://cdn.jsdelivr.net/gh/nanguawuming/CDN@1.0/picture/1.jpg","text":"flask是一个使用python编写的轻量级web应用框架 python可以直接用flask启动一个web服务页面 cd &#x2F;opt&#x2F;flask1 source .&#x2F;bin&#x2F;activate cd &#x2F;root vim demo.py...","link":"","photos":[],"count_time":{"symbolsCount":"5.6k","symbolsTime":"5 mins."},"categories":[{"name":"文章","slug":"文章","count":5,"path":"api/categories/文章.json"}],"tags":[{"name":"ssti模板注入","slug":"ssti模板注入","count":2,"path":"api/tags/ssti模板注入.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"8086汇编学习笔记_02","uid":"2872e18edcfe70db45537a6abab5f8bb","slug":"02","date":"2023-07-25T03:20:34.000Z","updated":"2023-08-08T13:26:25.376Z","comments":true,"path":"api/articles/02.json","cover":"../picture/10.png","text":"汇编语言程序1. 一个源程序从写出到执行的过程&#x2F;&#x2F; 简要过程： 编写 -&gt; 编译链接 -&gt; 执行 执行可执行文件中的程序：操作系统按照可执行文件中的描述信息，将可执行文件中的机器码和数据加载入内存，并进行相关的初始化（比如：设置CS:IP指向第一条...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":10,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_01","uid":"c056fa5ea8e6220d71e866be2b6f171d","slug":"01","date":"2023-07-25T03:20:34.000Z","updated":"2023-08-08T14:06:23.402Z","comments":true,"path":"api/articles/01.json","cover":"../picture/9.jpg","text":"一、寄存器（CPU工作原理）CPU概述 运算器，控制器，寄存器等器件，这些器件靠内部总线相连； 8086 CPU 有14个寄存器： AX BX CX DX SI DI SP BP IP CS SS DS ES PSW 通用寄存器有8个, 又可以分成2组, 一组是数据寄存器(4个)...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":10,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_04","uid":"27759c8c14f50cd48e39f238bf5dbaa8","slug":"04","date":"2023-07-25T03:20:34.000Z","updated":"2023-08-08T13:16:53.938Z","comments":true,"path":"api/articles/04.json","cover":"../picture/13.jpg","text":"包含多个段的程序1. 在代码段中使用数据dw 的含义是定义字型数据。 因为dw定义的数据处于代码段的最开始，所以偏移地址为0。 assume cs:codesg codesg segment dw 0123h,0456h,0789h,0abc,0def,0fedh,0cbah,0...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":10,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_05","uid":"02e063a90486ef4cde640d9e32f1b93d","slug":"05","date":"2023-07-25T03:20:34.000Z","updated":"2023-08-08T13:25:28.358Z","comments":true,"path":"api/articles/05.json","cover":"../picture/14.png","text":"数据处理的两个基本问题用reg表示一个寄存器，用sreg表示一个段寄存器。 reg的集合包括：ax,bx,cx,dx,ah,al,bh,bl,ch,cl,dh,dl,sp,bp,si,di; sreg的集合包括：ds,ss,cs,es； 1. bx、si、di、bp 在8086C...","link":"","photos":[],"count_time":{"symbolsCount":"6.6k","symbolsTime":"6 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":10,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_03","uid":"aa3313a82f9ba24855cce6bcccfff26c","slug":"03","date":"2023-07-25T03:20:34.000Z","updated":"2023-08-08T13:26:32.699Z","comments":true,"path":"api/articles/03.json","cover":"../picture/11.png","text":"bx和loop指令1. [bx]和内存单元的描述assume cs:codesg codesg segment fishcc: mov ax, 2000H mov ds, ax mov al, [0] mov bl, [1] mov cl, [2] mov dl, [3] mov...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":10,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_06","uid":"c9873ffc4b3a92fe4a08884e06b8fafa","slug":"06","date":"2023-07-25T03:20:34.000Z","updated":"2023-08-08T13:17:11.366Z","comments":true,"path":"api/articles/06.json","cover":"../picture/15.jpg","text":"转移指令的原理可以修改ip，或同时修改cs和ip的指令统称为转移指令。（就是可以控制CPU执行内存中某处代码的指令） 段内转移：只修改ip（如：jmp ax） 段间转移：同时修改cs和ip（如jmp 1000：0） 其中，段内转移又分为： 短转移：ip的修改范围是-128-127...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":10,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_07","uid":"6565a0972dbac42ac41da60ecf87342f","slug":"07","date":"2023-07-25T03:20:34.000Z","updated":"2023-08-08T13:25:46.851Z","comments":true,"path":"api/articles/07.json","cover":"../picture/16.png","text":"标志寄存器8086CPU的标志寄存器（也称flag）有16位，其中存储的信息通常被称为程序状态字（PSW） 标志寄存器是按位起作用的。 8086CPU的标志寄存器的结构： 标志寄存器flag的1、3、5、12、13、14、15位在8086CPU中没有使用，不具有任何含义。而0、2...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":10,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_08","uid":"1401df5d38db739612f2fd959b8dc1d1","slug":"08","date":"2023-07-25T03:20:34.000Z","updated":"2023-08-08T13:25:55.894Z","comments":true,"path":"api/articles/08.json","cover":"../picture/17.png","text":"端口CPU 可以直接读写 3 个地方的数据：CPU 内部的寄存器、内存单元、端口。 1. 端口的读写CPU 通过端口地址来定位端口。因为端口所在的芯片和 CPU 通过总线相连，所以端口地址和内存地址一样，通过地址总线来传送。PC 系统中，CPU 最多可以定位 64KB 个不同的端...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":10,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"web[LitCTF2023] 郑州轻工业大学首届网络安全赛wp","uid":"a1d695094e9aa3c3a7c4f837b1ce6fd6","slug":"Litctf 2023","date":"2023-05-16T15:45:17.000Z","updated":"2023-08-10T03:36:49.113Z","comments":true,"path":"api/articles/Litctf 2023.json","cover":"https://cdn.jsdelivr.net/gh/nanguawuming/CDN@1.0/picture/5.jpg","text":"1.我Flag呢？ 2.导弹迷踪 3.Follow me and hack me 4.Ping前端验证绕过，我们输入127.0.0.1，符合前端验证的格式就行，然后点击ping按钮，尝试用burpsuite抓包,（当然，你也可以选择禁用js来解决）并将抓到的包进行我们需要的修改，...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"文章","slug":"文章","count":5,"path":"api/categories/文章.json"}],"tags":[{"name":"LitCTF","slug":"LitCTF","count":1,"path":"api/tags/LitCTF.json"},{"name":"wp","slug":"wp","count":1,"path":"api/tags/wp.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}]}