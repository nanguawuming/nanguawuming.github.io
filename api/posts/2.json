{"total":31,"pageSize":12,"pageCount":3,"data":[{"title":"杂项摆烂的小记_进阶篇_05","uid":"a3fa8ac179f7a4b392edba6f23be541f","slug":"杂项摆烂小记05","date":"2023-08-25T12:30:34.000Z","updated":"2024-04-02T08:19:02.215Z","comments":true,"path":"api/articles/杂项摆烂小记05.json","cover":"../picture/35.jpg","text":" 这里是攻防世界难度5的题目，不知不觉，进度条已过大半。到这里很多题就有些吃力了，更多的记录一些题目的题解而不是对于知识点的总结。拓展了很多新的知识面，不能浅尝辄止呀，要更进一步！ 新的盐CRC爆破图片宽高 之前写过，但是忘记具体的内容了，重新学习一下。参考：https://bl...","link":"","photos":[],"count_time":{"symbolsCount":"46k","symbolsTime":"42 mins."},"categories":[{"name":"杂项","slug":"杂项","count":5,"path":"api/categories/杂项.json"}],"tags":[{"name":"杂项","slug":"杂项","count":5,"path":"api/tags/杂项.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"关于kali的无用知识","uid":"bfefb2c0f0b8f734361ed5a8a7fee1a4","slug":"note_关于Kali的无用知识","date":"2023-08-25T07:20:34.000Z","updated":"2024-04-01T03:14:46.348Z","comments":true,"path":"api/articles/note_关于Kali的无用知识.json","cover":"../picture/24.png","text":" 使用kali时一些知识的整理，也许在Ubuntu或者Debian也适用。 kali 修改主机名称sudo hostnamectl set-hostname your-new-hostname # your-new-hostname 为你想要更改的新主机名。 sudo vim &...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"无用空间","slug":"无用空间","count":2,"path":"api/categories/无用空间.json"}],"tags":[{"name":"Kali","slug":"Kali","count":1,"path":"api/tags/Kali.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_02","uid":"2872e18edcfe70db45537a6abab5f8bb","slug":"8086汇编_02","date":"2023-07-25T03:20:34.000Z","updated":"2024-04-01T03:09:02.340Z","comments":true,"path":"api/articles/8086汇编_02.json","cover":"../picture/10.png","text":"汇编语言程序1. 一个源程序从写出到执行的过程&#x2F;&#x2F; 简要过程： 编写 -&gt; 编译链接 -&gt; 执行 执行可执行文件中的程序：操作系统按照可执行文件中的描述信息，将可执行文件中的机器码和数据加载入内存，并进行相关的初始化（比如：设置CS:IP指向第一条...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/categories/8086汇编.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_01","uid":"c056fa5ea8e6220d71e866be2b6f171d","slug":"8086汇编_01","date":"2023-07-25T03:20:34.000Z","updated":"2024-04-01T03:08:47.818Z","comments":true,"path":"api/articles/8086汇编_01.json","cover":"../picture/9.jpg","text":"一、寄存器（CPU工作原理）CPU概述 运算器，控制器，寄存器等器件，这些器件靠内部总线相连； 8086 CPU 有14个寄存器： AX BX CX DX SI DI SP BP IP CS SS DS ES PSW 通用寄存器有8个, 又可以分成2组, 一组是数据寄存器(4个)...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/categories/8086汇编.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_03","uid":"aa3313a82f9ba24855cce6bcccfff26c","slug":"8086汇编_03","date":"2023-07-25T03:20:34.000Z","updated":"2024-04-01T03:09:14.812Z","comments":true,"path":"api/articles/8086汇编_03.json","cover":"../picture/11.png","text":"bx和loop指令1. [bx]和内存单元的描述assume cs:codesg codesg segment fishcc: mov ax, 2000H mov ds, ax mov al, [0] mov bl, [1] mov cl, [2] mov dl, [3] mov...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/categories/8086汇编.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_05","uid":"02e063a90486ef4cde640d9e32f1b93d","slug":"8086汇编_05","date":"2023-07-25T03:20:34.000Z","updated":"2024-04-01T03:09:39.550Z","comments":true,"path":"api/articles/8086汇编_05.json","cover":"../picture/14.png","text":"数据处理的两个基本问题用reg表示一个寄存器，用sreg表示一个段寄存器。 reg的集合包括：ax,bx,cx,dx,ah,al,bh,bl,ch,cl,dh,dl,sp,bp,si,di; sreg的集合包括：ds,ss,cs,es； 1. bx、si、di、bp 在8086C...","link":"","photos":[],"count_time":{"symbolsCount":"6.6k","symbolsTime":"6 mins."},"categories":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/categories/8086汇编.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_04","uid":"27759c8c14f50cd48e39f238bf5dbaa8","slug":"8086汇编_04","date":"2023-07-25T03:20:34.000Z","updated":"2024-04-01T03:09:26.876Z","comments":true,"path":"api/articles/8086汇编_04.json","cover":"../picture/13.jpg","text":"包含多个段的程序1. 在代码段中使用数据dw 的含义是定义字型数据。 因为dw定义的数据处于代码段的最开始，所以偏移地址为0。 assume cs:codesg codesg segment dw 0123h,0456h,0789h,0abc,0def,0fedh,0cbah,0...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/categories/8086汇编.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_06","uid":"c9873ffc4b3a92fe4a08884e06b8fafa","slug":"8086汇编_06","date":"2023-07-25T03:20:34.000Z","updated":"2024-04-01T03:09:53.164Z","comments":true,"path":"api/articles/8086汇编_06.json","cover":"../picture/15.jpg","text":"转移指令的原理可以修改ip，或同时修改cs和ip的指令统称为转移指令。（就是可以控制CPU执行内存中某处代码的指令） 段内转移：只修改ip（如：jmp ax） 段间转移：同时修改cs和ip（如jmp 1000：0） 其中，段内转移又分为： 短转移：ip的修改范围是-128-127...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/categories/8086汇编.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_08","uid":"1401df5d38db739612f2fd959b8dc1d1","slug":"8086汇编_08","date":"2023-07-25T03:20:34.000Z","updated":"2024-04-01T03:10:19.097Z","comments":true,"path":"api/articles/8086汇编_08.json","cover":"../picture/17.png","text":"端口CPU 可以直接读写 3 个地方的数据：CPU 内部的寄存器、内存单元、端口。 1. 端口的读写CPU 通过端口地址来定位端口。因为端口所在的芯片和 CPU 通过总线相连，所以端口地址和内存地址一样，通过地址总线来传送。PC 系统中，CPU 最多可以定位 64KB 个不同的端...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/categories/8086汇编.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"8086汇编学习笔记_07","uid":"6565a0972dbac42ac41da60ecf87342f","slug":"8086汇编_07","date":"2023-07-25T03:20:34.000Z","updated":"2024-04-01T03:10:06.801Z","comments":true,"path":"api/articles/8086汇编_07.json","cover":"../picture/16.png","text":"标志寄存器8086CPU的标志寄存器（也称flag）有16位，其中存储的信息通常被称为程序状态字（PSW） 标志寄存器是按位起作用的。 8086CPU的标志寄存器的结构： 标志寄存器flag的1、3、5、12、13、14、15位在8086CPU中没有使用，不具有任何含义。而0、2...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"12 mins."},"categories":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/categories/8086汇编.json"}],"tags":[{"name":"8086汇编","slug":"8086汇编","count":8,"path":"api/tags/8086汇编.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"关于vim 的使用","uid":"d8fb11b13d282a9b57aaf892123ba8a3","slug":"工具_Vim","date":"2023-06-01T12:30:34.000Z","updated":"2024-04-01T03:12:02.784Z","comments":true,"path":"api/articles/工具_Vim.json","cover":"../picture/25.png","text":" 很喜欢某位师傅的一句话：“IDE有IDE的职责，Editor有Editor的职责，没必要非把一个变成另外一个。” ","link":"","photos":[],"count_time":{"symbolsCount":66,"symbolsTime":"1 mins."},"categories":[{"name":"工具","slug":"工具","count":5,"path":"api/categories/工具.json"}],"tags":[{"name":"vim","slug":"vim","count":1,"path":"api/tags/vim.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"nexttrace使用","uid":"eb84d15d71fcc835a097211677443619","slug":"工具_nexttrace","date":"2023-05-31T12:30:34.000Z","updated":"2024-04-01T03:11:21.308Z","comments":true,"path":"api/articles/工具_nexttrace.json","cover":"../picture/23.png","text":" 用法： nexttrace [-h | --help] [-T | --tcp] [-U | --udp] [-F | --fast-trace] [-p | --port &lt;整数&gt;] [-q | --queries &lt;整数&gt;] [--parallel-...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"工具","slug":"工具","count":5,"path":"api/categories/工具.json"}],"tags":[{"name":"渗透工具","slug":"渗透工具","count":4,"path":"api/tags/渗透工具.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}]}