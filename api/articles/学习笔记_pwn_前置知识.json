{"title":"学习笔记_pwn_前置知识","uid":"c73e3f9c5f4b12ffaf59a917c0b0e6c2","slug":"学习笔记_pwn_前置知识","date":"2023-08-25T12:30:34.000Z","updated":"2024-04-01T03:12:38.326Z","comments":true,"path":"api/articles/学习笔记_pwn_前置知识.json","keywords":null,"cover":"../picture/33.jpg","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>学习网站：<a href=\"https://ctf-wiki.org/pwn/linux/user-mode/environment/\">https://ctf-wiki.org/pwn/linux/user-mode/environment/</a><br>推荐课程：<a href=\"https://www.bilibili.com/video/BV1mr4y1Y7fW/\">https://www.bilibili.com/video/BV1mr4y1Y7fW/</a></p></blockquote>\n<h3 id=\"前置知识\"><a href=\"#前置知识\" class=\"headerlink\" title=\"前置知识\"></a>前置知识</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>学 pwn 之前先学 8086汇编就可以。</p></blockquote>\n<h4 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h4><ul>\n<li>破解、利用成功（程序的二进制漏洞）</li>\n<li>攻破（设备、服务器）</li>\n<li>控制（设备、服务器）</li>\n</ul>\n<h4 id=\"名词解释\"><a href=\"#名词解释\" class=\"headerlink\" title=\"名词解释\"></a>名词解释</h4><ul>\n<li>exploit<ul>\n<li>用于攻击的脚本与方案</li>\n</ul>\n</li>\n<li>payload<ul>\n<li>攻击载荷，是对目的进程被劫持控制流的数据</li>\n</ul>\n</li>\n<li>shellcode<ul>\n<li>调用攻击目标的shell的代码</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"常用或不常用的指令\"><a href=\"#常用或不常用的指令\" class=\"headerlink\" title=\"常用或不常用的指令\"></a>常用或不常用的指令</h4><ul>\n<li><code>file</code>指令用于确定给定文件的类型。它会读取文件的特定部分并尝试确定文件的格式，例如可执行文件、共享库、文本文件等。<strong>（重要）</strong></li>\n<li><code>ldd</code>指令用于打印可执行文件或共享库所依赖的共享库列表。它会分析可执行文件或共享库的依赖关系，并列出该文件需要加载的共享库的路径。<strong>（重要）</strong></li>\n<li><code>nm</code>指令用于显示可执行文件或共享库中的符号表信息。它可以列出函数、变量和其他符号的名称以及它们的地址。</li>\n<li><code>hexdump</code>指令用于以十六进制格式显示文件的内容。它会将文件的每个字节转换为十六进制，并显示它们的偏移量和字符表示形式。</li>\n<li><code>objdump -d -M intel</code>指令用于以Intel格式显示目标文件或可执行文件的反汇编代码。<strong>（不常用）</strong><ul>\n<li><code>-d</code>选项表示需要显示反汇编代码。</li>\n<li><code>-M intel</code>选项表示使用Intel格式显示指令。</li>\n</ul>\n</li>\n<li><code>readelf -a</code>指令用于显示目标文件或可执行文件的所有节(Sections)的详细信息。<strong>（不常用）</strong></li>\n</ul>\n<h4 id=\"gcc-编译程序过程\"><a href=\"#gcc-编译程序过程\" class=\"headerlink\" title=\"gcc 编译程序过程\"></a>gcc 编译程序过程</h4><p>GCC中四个编译过程的相应命令：</p>\n<ul>\n<li><p>预处理（Preprocessing）：</p>\n<ul>\n<li>使用gcc -E命令进行预处理，生成预处理后的代码文件。</li>\n<li>例如：gcc -E source.c -o preprocessed.c</li>\n</ul>\n</li>\n<li><p>编译（Compilation）：</p>\n<ul>\n<li>使用gcc -S命令进行编译，生成汇编代码文件。</li>\n<li>例如：gcc -S preprocessed.c -o assembly.s</li>\n</ul>\n</li>\n<li><p>汇编（Assembly）：</p>\n<ul>\n<li>使用gcc -c命令进行汇编，生成目标文件。</li>\n<li>例如：gcc -c assembly.s -o object.o</li>\n</ul>\n</li>\n<li><p>链接（Linking）：</p>\n<ul>\n<li>使用gcc命令进行链接，生成最终的可执行文件。</li>\n<li>例如：gcc object.o -o executable</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"一些-gcc-编译指令\"><a href=\"#一些-gcc-编译指令\" class=\"headerlink\" title=\"一些 gcc 编译指令\"></a>一些 gcc 编译指令</h4><p><strong>GCC编译32位程序：</strong><br>sudo apt-get install gcc-multilib g++-multilib module-assistant</p>\n<p><strong>编译选项：</strong><br>gcc -m32 test.c -o test<br>gcc test.c -fno-omit-frame-pointer -o test<br>gcc -m32 test.c -fno-omit-frame-pointer -o test</p>\n<ul>\n<li><p>-fno-omit-frame-pointer选项：</p>\n<ul>\n<li>禁用省略帧指针。</li>\n</ul>\n</li>\n<li><p>“-no-pie”选项：</p>\n<ul>\n<li>默认情况下，gcc会生成可执行文件以PIE的形式，可执行文件的加载地址是可变的。</li>\n<li>“-no-pie”可以禁用PIE，生成传统的非位置无关可执行文件。</li>\n</ul>\n</li>\n<li><p>“-static”选项：</p>\n<ul>\n<li>默认情况下，gcc会生成使用动态链接的可执行文件，可执行文件在运行时需要依赖系统中已安装的共享库。</li>\n<li>“-static”生成静态链接的可执行文件，可执行文件会将所有依赖的库静态地链接到可执行文件中，在运行时不再依赖于系统中的共享库。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"部分寄存器的功能\"><a href=\"#部分寄存器的功能\" class=\"headerlink\" title=\"部分寄存器的功能\"></a>部分寄存器的功能</h4><ul>\n<li>RIP<ul>\n<li>存放当前执行的指令的地址。</li>\n</ul>\n</li>\n<li>RSP<ul>\n<li>存放当前栈帧的栈顶地址。</li>\n</ul>\n</li>\n<li>RBP<ul>\n<li>存放当前栈帧的栈底地址。</li>\n</ul>\n</li>\n<li>RAX<ul>\n<li>通用寄存器。存放函数返回值。</li>\n</ul>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>都可以类比8086汇编的寄存器，很好理解。</p></blockquote>\n<h4 id=\"常用的汇编指令\"><a href=\"#常用的汇编指令\" class=\"headerlink\" title=\"常用的汇编指令\"></a>常用的汇编指令</h4><ul>\n<li>MOV</li>\n<li>LEA</li>\n<li>ADD&#x2F;SUB</li>\n<li>PUSH</li>\n<li>POP</li>\n<li>CMP</li>\n<li>JMP</li>\n<li>J[Condition] JCC</li>\n<li>CALL</li>\n<li>LEAVE</li>\n<li>RET</li>\n<li>· · ·</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>如果你想追求程序极致的运行速度，可以参照英特尔的白皮书手写更复杂的汇编。</p></blockquote>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\"># 一些汇编代码可以相互转化，编译器会进行择优选择。\nsub rbp,0x18    &#x2F;&#x2F; 4\nmov rax,rbp     &#x2F;&#x2F; 3\n↓\nlea rax,[rbp-0x18]  &#x2F;&#x2F; 4\n\nxor ebx,ebx     &#x2F;&#x2F;2\n↓\nmov ebx,0       &#x2F;&#x2F;5\n\ncmp 和 sub 类似，cmp不存值，sub存值。\n\ntest 和 &amp; 类似，\ntest eax,eax    eax&amp;eax   eax&#x3D;0-&gt;0  eax!&#x3D;0-&gt;!0\n↓\ncmp eax,0\n\npush ebp: esp-4，把ebp放入esp指的地方\npop ebp: 把esp指的地方赋值给 ebp，esp+4\n\ncall: push eip ; jmp func\n\nleave: mov esp,ebp ; pop ebp\nret: pop eip</code></pre>\n\n<h4 id=\"动态调试器\"><a href=\"#动态调试器\" class=\"headerlink\" title=\"动态调试器\"></a>动态调试器</h4><ul>\n<li>运行</li>\n<li>步入，步过，步出，步止</li>\n<li>断电（设置，删除，显示）</li>\n<li>查看内存、寄存器、各种参数</li>\n<li>设置内存、寄存器、各种参数（加载文件）</li>\n<li>远程调试</li>\n<li>其他辅助功能</li>\n</ul>\n<h4 id=\"gdb-动态调试\"><a href=\"#gdb-动态调试\" class=\"headerlink\" title=\"gdb 动态调试\"></a>gdb 动态调试</h4><ul>\n<li><p>(gdb) run 用于直接启动程序的执行。</p>\n</li>\n<li><p>(gdb) start 用于启动程序的执行，但会在程序的入口点处设置一个断点。</p>\n</li>\n<li><p>(gdb) i r 显示当前程序的寄存器状态</p>\n</li>\n<li><p>(gdb) disassemble $rip</p>\n<ul>\n<li>~&#x2F;.gdbinit</li>\n<li>set disassembly-flavor intel</li>\n</ul>\n</li>\n<li><p>(gdb) b *地址 设置断点</p>\n</li>\n<li><p>(gdb) i b 显示当前已设置的断点信息。</p>\n</li>\n<li><p>(gdb) c 跳过当前断点或停止点，用于继续程序的执行。</p>\n</li>\n<li><p>(gdb) disable b 3 禁用编号为3的断点。</p>\n</li>\n<li><p>(gdb) enable b 3 启用编号为3的断点。</p>\n</li>\n<li><p>(gdb) ni 执行下一条机器指令。</p>\n</li>\n<li><p>(gdb) si 单步执行程序并进入函数。</p>\n</li>\n<li><p>(gdb) finish 让程序执行完当前函数并停止。</p>\n</li>\n<li><p>(gdb) <strong>x&#x2F;[格式] [地址]</strong> 查看内存中的数据。</p>\n<ul>\n<li>通过(gdb) x命令，可以以不同的格式查看内存中的数据。以下是一些常见的用法示例：<ul>\n<li>(gdb) x&#x2F;1b [地址]：以字节（byte）格式查看指定地址的内容。</li>\n<li>(gdb) x&#x2F;2w [地址]：以字（word）格式查看指定地址的内容。</li>\n<li>(gdb) x&#x2F;4x [地址]：以十六进制格式查看指定地址的内容。</li>\n<li>(gdb) x&#x2F;s [地址]：以字符串格式查看指定地址的内容。</li>\n<li>(gdb) x&#x2F;20gx [地址]命令用于以十六进制格式查看指定地址附近的20个64位数据。</li>\n<li><code>(gdb) x/20i $rip</code>命令用于查看当前指令地址（$rip）附近的指令。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>(gdb) <strong>set [变量名]&#x3D;[值]</strong> 通过该命令可以修改变量的值。</p>\n<ul>\n<li>set *((unsigned int)$ebp)&#x3D;0x18</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/../all_picture/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bpwn_01_01.png\" alt=\"pwn\"></p>\n<h4 id=\"pwndbg-调试的一些命令\"><a href=\"#pwndbg-调试的一些命令\" class=\"headerlink\" title=\"pwndbg 调试的一些命令\"></a>pwndbg 调试的一些命令</h4><p>包含gdb调试的大多数命令。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">pwndbg&gt; cyclic 100 # 生成长度100，特定重复模式的字符串\npwndbg&gt; cyclic -l 四个字符  # 定位重复模式中特定字符的位置\n\npwndbg&gt; distance 0x7fffffffdd60 0x7fffffffdd10\n# 计算两个内存地址之间的距离\n\npwndbg&gt; vmmap   #查看内存分配情况</code></pre>\n\n<h4 id=\"checksec-检查程序安全性\"><a href=\"#checksec-检查程序安全性\" class=\"headerlink\" title=\"checksec 检查程序安全性\"></a>checksec 检查程序安全性</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">checksec binary\n# 查看二进制文件的各种安全保护机制是否开启或禁用</code></pre>\n\n<p>checksec命令会显示以下安全保护机制的状态：</p>\n<ul>\n<li>软件堆栈保护（Stack Canary）：用于检测缓冲区溢出漏洞。</li>\n<li>可执行空间保护（Executable Space Protection）：防止代码注入攻击。</li>\n<li>数据执行保护（Data Execution Prevention）：防止执行非可执行内存中的代码。</li>\n<li>地址空间布局随机化（Address Space Layout Randomization）：随机化内存布局，增加攻击者的难度。</li>\n<li>文件位置独立（Position Independent Executable）：使二进制文件能够在任意地址加载。</li>\n</ul>\n<h4 id=\"可执行文件\"><a href=\"#可执行文件\" class=\"headerlink\" title=\"可执行文件\"></a>可执行文件</h4><ul>\n<li>广义：文件中的数据是可执行代码的文件<ul>\n<li>.out .exe .sh .py</li>\n</ul>\n</li>\n<li>狭义：文件中的数据是机器码的文件<ul>\n<li>.out .exe .dll .so</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"可执行文件分类\"><a href=\"#可执行文件分类\" class=\"headerlink\" title=\"可执行文件分类\"></a>可执行文件分类</h4><ul>\n<li>Windows：PE（Protable Executable）<ul>\n<li>可执行程序<ul>\n<li>.exe</li>\n</ul>\n</li>\n<li>动态链接库<ul>\n<li>.dll</li>\n</ul>\n</li>\n<li>静态链接库<ul>\n<li>.lib</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Linux：ELF（Executable and Linkable Format）<ul>\n<li>可执行程序<ul>\n<li>.out</li>\n</ul>\n</li>\n<li>动态链接库<ul>\n<li>.so</li>\n</ul>\n</li>\n<li>静态链接库<ul>\n<li>.a</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"Linux下的可执行文件格式ELF\"><a href=\"#Linux下的可执行文件格式ELF\" class=\"headerlink\" title=\"Linux下的可执行文件格式ELF\"></a>Linux下的可执行文件格式ELF</h4><ul>\n<li>ELE文件头表（ELE header）<ul>\n<li>记录了ELE文件的组织结构</li>\n</ul>\n</li>\n<li>程序头表（Program header table）<ul>\n<li>告诉系统图和创建进程</li>\n<li>生成进程的可执行文件必须拥有此结构</li>\n<li>重定位文件不一定需要</li>\n</ul>\n</li>\n<li>节头表（Section header table）<ul>\n<li>记录了ELE文件的节区信息</li>\n<li>用于链接的目标文件必须拥有此结构</li>\n<li>其它类型目标文件不一定需要</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"磁盘中的ELF与内存中的ELF\"><a href=\"#磁盘中的ELF与内存中的ELF\" class=\"headerlink\" title=\"磁盘中的ELF与内存中的ELF\"></a>磁盘中的ELF与内存中的ELF</h4><p><img src=\"/../all_picture/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bpwn_01_05.png\" alt=\"pwn\"></p>\n<p><img src=\"/../all_picture/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bpwn_01_06.png\" alt=\"pwn\"></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意相对应的权限。</p></blockquote>\n<h4 id=\"ELF文件到虚拟地址空间的映射\"><a href=\"#ELF文件到虚拟地址空间的映射\" class=\"headerlink\" title=\"ELF文件到虚拟地址空间的映射\"></a>ELF文件到虚拟地址空间的映射</h4><p><img src=\"/../all_picture/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bpwn_01_07.png\" alt=\"pwn\"></p>\n<h4 id=\"进程虚拟地址空间\"><a href=\"#进程虚拟地址空间\" class=\"headerlink\" title=\"进程虚拟地址空间\"></a>进程虚拟地址空间</h4><ul>\n<li>虚拟内存<strong>用户空间</strong>每个进程一份</li>\n<li>虚拟内存<strong>内核空间</strong>所有进程共享一份</li>\n<li>虚拟内存mmap段中的<strong>动态链接库</strong>仅在物理内存中装载一份</li>\n</ul>\n<p><img src=\"/../all_picture/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bpwn_01_08.png\" alt=\"pwn\"></p>\n<h4 id=\"静态存储区和动态存储区\"><a href=\"#静态存储区和动态存储区\" class=\"headerlink\" title=\"静态存储区和动态存储区\"></a>静态存储区和动态存储区</h4><p><img src=\"/../all_picture/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bpwn_01_09.png\" alt=\"pwn\"></p>\n<h4 id=\"段（segment）与节（section）概念\"><a href=\"#段（segment）与节（section）概念\" class=\"headerlink\" title=\"段（segment）与节（section）概念\"></a>段（segment）与节（section）概念</h4><ul>\n<li>代码段（Text segment）只包含了代码与只读数据<ul>\n<li>.text 节</li>\n<li>.rodata 节</li>\n<li>.hash 节</li>\n<li>.dynsym 节</li>\n<li>.dynstr 节</li>\n<li>.plt 节</li>\n<li>.rel.got 节</li>\n<li>···</li>\n</ul>\n</li>\n<li>数据段（Data segment）包含了可读可写数据<ul>\n<li>.data 节</li>\n<li>.dynamic 节</li>\n<li>.got 节</li>\n<li>.got.plt 节</li>\n<li>.bss 节</li>\n<li>···</li>\n</ul>\n</li>\n<li>栈段（Stack segment）</li>\n</ul>\n<h4 id=\"段（segment）与节（section）的关联\"><a href=\"#段（segment）与节（section）的关联\" class=\"headerlink\" title=\"段（segment）与节（section）的关联\"></a>段（segment）与节（section）的关联</h4><ul>\n<li>一个段包含多个节</li>\n<li>段视图用于进程的内存区域的 rwx 权限划分</li>\n<li>节视图用于ELF文件编译链接时与在磁盘上存储时的文件结构的组织</li>\n</ul>\n<h4 id=\"大端序与小端序\"><a href=\"#大端序与小端序\" class=\"headerlink\" title=\"大端序与小端序\"></a>大端序与小端序</h4><p><img src=\"/../all_picture/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bpwn_01_10.png\" alt=\"pwn\"></p>\n<ul>\n<li>小端序<ul>\n<li>低地址存放数据低位、高地址存放数据高位</li>\n<li>较为常见的格式</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"/../all_picture/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bpwn_01_11.png\" alt=\"pwn\"></p>\n<ul>\n<li>大端序<ul>\n<li>低地址存放数据高位、高地址存放数据低位</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"程序的执行过程\"><a href=\"#程序的执行过程\" class=\"headerlink\" title=\"程序的执行过程\"></a>程序的执行过程</h4><p><img src=\"/../all_picture/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bpwn_01_12.png\" alt=\"pwn\"></p>\n<h4 id=\"静态链接的程序的执行过程\"><a href=\"#静态链接的程序的执行过程\" class=\"headerlink\" title=\"静态链接的程序的执行过程\"></a>静态链接的程序的执行过程</h4><p><img src=\"/../all_picture/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bpwn_01_13.png\" alt=\"pwn\"></p>\n<h4 id=\"动态链接的程序的执行过程\"><a href=\"#动态链接的程序的执行过程\" class=\"headerlink\" title=\"动态链接的程序的执行过程\"></a>动态链接的程序的执行过程</h4><p><img src=\"/../all_picture/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8Bpwn_01_14.png\" alt=\"pwn\"></p>\n<h3 id=\"python脚本简单示例\"><a href=\"#python脚本简单示例\" class=\"headerlink\" title=\"python脚本简单示例\"></a>python脚本简单示例</h3><h4 id=\"不使用pwntools\"><a href=\"#不使用pwntools\" class=\"headerlink\" title=\"不使用pwntools\"></a>不使用pwntools</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>python 脚本可以发送不可打印字符。</p></blockquote>\n<p>示例：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># python2\nimport socket\nimport telnetlib\nimport struct\n\n&#39;&#39;&#39;\n def p32(val):\n  # 将32位的整数转化为字符串（小端模式）\n  return struct.pack(&quot;&quot;,val)\n&#39;&#39;&#39;\n\ndef pwn():\n  # 创建一个TCP socket\n  s &#x3D; socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n  # 连接服务器 xxx.x.x.x 的 xxxx 端口\n  s.connect((&quot;xxx.x.x.x&quot;, xxxx))\n  # 填充数据\n  payload &#x3D; &#39;a&#39; * 8 + &#39;\\x10&#39;\n  s.sendall(payload + &#39;\\n&#39;)\n  # 创建 telnet 来产生一个控制服务器的 shell\n  t &#x3D; telnetlib.Telnet()\n  t.sock &#x3D; s\n  t.interact()\n\nif __name__ &#x3D;&#x3D; &quot;__main__&quot;:\n  pwn()</code></pre>\n\n<h4 id=\"使用pwntools\"><a href=\"#使用pwntools\" class=\"headerlink\" title=\"使用pwntools\"></a>使用pwntools</h4><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>官方中文文档：<a href=\"https://pwntools-docs-zh.readthedocs.io/zh_CN/dev/intro.html\">https://pwntools-docs-zh.readthedocs.io/zh_CN/dev/intro.html</a></p></blockquote>\n<p>示例1：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from pwn import *\n\ncontext(log_level&#x3D;&#39;debug&#39;,arch&#x3D;&#39;amd64&#39;,os&#x3D;&#39;linux&#39;)\nio &#x3D; process(&#39;.&#x2F;test&#39;)\n\n# io.recvuntil(&#39;input:\\n&#39;)\n# io.send(&#39;发送的内容&#39;)   # io.sendline(&#39;发送的内容&#39;)‘\npayload &#x3D; b&#39;a&#39;*9 + p64(0x4011b7)\ngdb.attach(io)\npause()\n\ndem &#x3D; b&#39;input\\n&#39;\nio.sendlineafter(dem,payload)\n\nio.interacive()</code></pre>\n\n<p>示例2：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from pwn import *\ncontext(log_level&#x3D;&#39;debug&#39;,arch&#x3D;&#39;i386&#39;,os&#x3D;&#39;linux&#39;)\npwnfile &#x3D; &#39;.&#x2F;test&#39;\nio &#x3D; process(pwnfile)\n# io &#x3D; remote(&#39;&#39;, )\nelf &#x3D; ELF(pwnfile)\nrop &#x3D; ROP(pwnfile)\n\npadding2ebp &#x3D; 0x10  # 0x14\npadding &#x3D; padding2ebp + context.word_size &#x2F;&#x2F; 8\n# 通过调试得到\n\nreturn_addr &#x3D; 0x80691f  # 返回地址\npayload &#x3D; b&#39;a&#39; * padding + p32(return_addr)\n# payload &#x3D; flat([&#39;a&#39;*padding,return_addr])\ndelimiter &#x3D; &#39;input:&#39;\nio.sendlineafter(delimiter,payload)\nio.interactive()</code></pre>\n","feature":false,"text":" 学习网站：https://ctf-wiki.org/pwn/linux/user-mode/environment/推荐课程：https://www.bilibili.com/video/BV1mr4y1Y7fW/ 前置知识 学 pwn 之前先学 8086汇编就可以。 概述 破...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"pwn前置","slug":"pwn前置","count":2,"path":"api/categories/pwn前置.json"}],"tags":[{"name":"pwn","slug":"pwn","count":2,"path":"api/tags/pwn.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86\"><span class=\"toc-text\">前置知识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">概述</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%90%8D%E8%AF%8D%E8%A7%A3%E9%87%8A\"><span class=\"toc-text\">名词解释</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E6%88%96%E4%B8%8D%E5%B8%B8%E7%94%A8%E7%9A%84%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">常用或不常用的指令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#gcc-%E7%BC%96%E8%AF%91%E7%A8%8B%E5%BA%8F%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">gcc 编译程序过程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%BA%9B-gcc-%E7%BC%96%E8%AF%91%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">一些 gcc 编译指令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%83%A8%E5%88%86%E5%AF%84%E5%AD%98%E5%99%A8%E7%9A%84%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">部分寄存器的功能</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E7%9A%84%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4\"><span class=\"toc-text\">常用的汇编指令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95%E5%99%A8\"><span class=\"toc-text\">动态调试器</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#gdb-%E5%8A%A8%E6%80%81%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">gdb 动态调试</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#pwndbg-%E8%B0%83%E8%AF%95%E7%9A%84%E4%B8%80%E4%BA%9B%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">pwndbg 调试的一些命令</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#checksec-%E6%A3%80%E6%9F%A5%E7%A8%8B%E5%BA%8F%E5%AE%89%E5%85%A8%E6%80%A7\"><span class=\"toc-text\">checksec 检查程序安全性</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">可执行文件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E5%88%86%E7%B1%BB\"><span class=\"toc-text\">可执行文件分类</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#Linux%E4%B8%8B%E7%9A%84%E5%8F%AF%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8FELF\"><span class=\"toc-text\">Linux下的可执行文件格式ELF</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A3%81%E7%9B%98%E4%B8%AD%E7%9A%84ELF%E4%B8%8E%E5%86%85%E5%AD%98%E4%B8%AD%E7%9A%84ELF\"><span class=\"toc-text\">磁盘中的ELF与内存中的ELF</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ELF%E6%96%87%E4%BB%B6%E5%88%B0%E8%99%9A%E6%8B%9F%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4%E7%9A%84%E6%98%A0%E5%B0%84\"><span class=\"toc-text\">ELF文件到虚拟地址空间的映射</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E7%A8%8B%E8%99%9A%E6%8B%9F%E5%9C%B0%E5%9D%80%E7%A9%BA%E9%97%B4\"><span class=\"toc-text\">进程虚拟地址空间</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9D%99%E6%80%81%E5%AD%98%E5%82%A8%E5%8C%BA%E5%92%8C%E5%8A%A8%E6%80%81%E5%AD%98%E5%82%A8%E5%8C%BA\"><span class=\"toc-text\">静态存储区和动态存储区</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AE%B5%EF%BC%88segment%EF%BC%89%E4%B8%8E%E8%8A%82%EF%BC%88section%EF%BC%89%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">段（segment）与节（section）概念</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AE%B5%EF%BC%88segment%EF%BC%89%E4%B8%8E%E8%8A%82%EF%BC%88section%EF%BC%89%E7%9A%84%E5%85%B3%E8%81%94\"><span class=\"toc-text\">段（segment）与节（section）的关联</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%A4%A7%E7%AB%AF%E5%BA%8F%E4%B8%8E%E5%B0%8F%E7%AB%AF%E5%BA%8F\"><span class=\"toc-text\">大端序与小端序</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">程序的执行过程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9D%99%E6%80%81%E9%93%BE%E6%8E%A5%E7%9A%84%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">静态链接的程序的执行过程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E7%9A%84%E7%A8%8B%E5%BA%8F%E7%9A%84%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">动态链接的程序的执行过程</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#python%E8%84%9A%E6%9C%AC%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">python脚本简单示例</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E4%BD%BF%E7%94%A8pwntools\"><span class=\"toc-text\">不使用pwntools</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8pwntools\"><span class=\"toc-text\">使用pwntools</span></a></li></ol></li></ol>","author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"附录：pwn环境安装-kali","uid":"8f37158a20e4883949646d3e9bd7e230","slug":"note_pwn环境安装","date":"2023-08-25T12:30:34.000Z","updated":"2024-04-01T03:13:01.502Z","comments":true,"path":"api/articles/note_pwn环境安装.json","keywords":null,"cover":"../picture/32.jpg","text":"附录：pwn环境配置-kali换源+代理apt换源sudo su vim &#x2F;etc&#x2F;apt&#x2F;sources.list 注释掉官方的源，换成中科大的源。 #中科大 deb http:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"pwn前置","slug":"pwn前置","count":2,"path":"api/categories/pwn前置.json"}],"tags":[{"name":"pwn","slug":"pwn","count":2,"path":"api/tags/pwn.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"杂项摆烂的小记_基础篇_02","uid":"8610bc7b74f181a47efb2d99d885966d","slug":"杂项摆烂小记02","date":"2023-08-25T12:30:34.000Z","updated":"2024-04-01T03:15:16.087Z","comments":true,"path":"api/articles/杂项摆烂小记02.json","keywords":null,"cover":"../picture/26.jpg","text":" 从这里开始就是攻防世界难度2的杂项题了。里面有很简单的题，也有复杂一点的题，嗯，比如：this_is_flag。 新的盐pyc文件头 03F30D0A pyc文件反编译得到python源代码 在线16进制转文件 https://tool.hiofd.com/hex-conver...","link":"","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"杂项","slug":"杂项","count":5,"path":"api/categories/杂项.json"}],"tags":[{"name":"杂项","slug":"杂项","count":5,"path":"api/tags/杂项.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}