{"title":"杂项摆烂的小记_基础篇_01","uid":"0cb170795b119823c21528234910bfc1","slug":"杂项摆烂小记01","date":"2023-08-25T12:30:34.000Z","updated":"2023-08-27T07:09:54.636Z","comments":true,"path":"api/articles/杂项摆烂小记01.json","keywords":null,"cover":"../picture/25.png","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>杂项真的很杂，但也有规律可循。<br>温故知新，是一些零零碎碎的做题笔记。</p></blockquote>\n<h4 id=\"新的盐\"><a href=\"#新的盐\" class=\"headerlink\" title=\"新的盐\"></a>新的盐</h4><h5 id=\"图片宽高错误\"><a href=\"#图片宽高错误\" class=\"headerlink\" title=\"图片宽高错误\"></a>图片宽高错误</h5><p>有一张png图片在kali打不开，简单尝试无果，转到Windows用stegsolve打开，找到file format模块，发现CRC校验不正确；用winhex或者010editor打开图片，修改第二行的图片宽高，稍微改大一些就可以；再次打开图片发现flag。</p>\n<h5 id=\"pyc反编译\"><a href=\"#pyc反编译\" class=\"headerlink\" title=\"pyc反编译\"></a>pyc反编译</h5><p>stegsolve扫描图片得到二维码，扫描二维码发现一堆十六进制数，十六进制转ASCII码中发现了flag和1.py和1.pyt等关键字，保存为.pyc格式反编译得到.py文件。<br>pyc反编译网址：<a href=\"https://tool.lu/pyc/\">https://tool.lu/pyc/</a></p>\n<h5 id=\"用strings命令从流量包找flag\"><a href=\"#用strings命令从流量包找flag\" class=\"headerlink\" title=\"用strings命令从流量包找flag\"></a>用strings命令从流量包找flag</h5><p>strings命令用于在二进制文件中查找并打印可打印的ASCII字符串。它会扫描给定的文件或输入流，并提取其中的字符串。</p>\n<p>strings命令常用于分析二进制文件，例如可执行文件、库文件或任何其他二进制文件，以查找包含的文本信息。</p>\n<p>kali 中使用 strings 即查找 流量包.pcapng 中的带有“{”的 ASCII 字符串<br>strings webshell.pcapng | grep {</p>\n<h5 id=\"用-strings-命令读取-elf-文件\"><a href=\"#用-strings-命令读取-elf-文件\" class=\"headerlink\" title=\"用 strings 命令读取 elf 文件\"></a>用 strings 命令读取 elf 文件</h5><p>string 文件名 | grep {</p>\n<p>当然，也可以放到winhex、010editor里面寻找。</p>\n<h5 id=\"evince-和-okular-打开-pdf-都很好用\"><a href=\"#evince-和-okular-打开-pdf-都很好用\" class=\"headerlink\" title=\"evince 和 okular 打开 pdf 都很好用\"></a>evince 和 okular 打开 pdf 都很好用</h5><p>注意打开文件的权限和你现在的用户，kali用户有的权限root用户不一定有。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">用法：\n  evince [选项...] [文件...] GNOME文档查看器\n帮助选项：\n  -h, --help                  显示帮助选项\n  --help-all                  显示所有帮助选项\n  --help-gtk                  显示GTK+选项\n应用程序选项：\n  -o, --new-window            打开一个新窗口。\n  -p, --page-label&#x3D;PAGE       显示指定页码的文档。\n  -i, --page-index&#x3D;NUMBER     显示指定页数的文档。\n  -n, --named-dest&#x3D;DEST       显示指定名称的目标位置。\n  -f, --fullscreen            以全屏模式运行evince\n  -s, --presentation          以演示模式运行evince\n  -w, --preview               以预览模式运行evince\n  -l, --find&#x3D;STRING           在文档中查找指定的单词或短语\n  --display&#x3D;DISPLAY           使用的X显示</code></pre>\n\n<h5 id=\"stegsolve-找到的二维码扫不出来\"><a href=\"#stegsolve-找到的二维码扫不出来\" class=\"headerlink\" title=\"stegsolve 找到的二维码扫不出来\"></a>stegsolve 找到的二维码扫不出来</h5><p>二维码有时候并不能完整出现，部分存在缺失，可以分多次找到缺失的地方，<br>再使用ps进行拼接得到完整的二维码。</p>\n<h5 id=\"题目：时间刺客！\"><a href=\"#题目：时间刺客！\" class=\"headerlink\" title=\"题目：时间刺客！\"></a>题目：时间刺客！</h5><p>压缩包里有四个文件，将四个文件的创建时间视作一些ASCII码可见字符的拼接，然后转换成文本之后就能获得 flag。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import io\nimport re\nimport os\n\nresult_str &#x3D; &#39;&#39;\n\nfile_list &#x3D; [&#39;1.jpg&#39;, &#39;2.jpg&#39;, &#39;3.jpg&#39;, &#39;4.jpg&#39;]\nfor i in file_list:\n    filepath &#x3D; &#39;.&#x2F;附件&#x2F;&#39; + i\n    print(i)\n    # print( int( (( os.path.getmtime(filepath) * (10 ** 9) ) % (2 ** 64 - 1) ) &#x2F; (10 ** 9)) )\n    result_str +&#x3D; str( int(  os.path.getmtime(filepath)   ) ) \n\nprint(result_str)\n\nnum_list &#x3D; re.findall(r&#39;1[0-2][0-9]|[4-9][0-9]&#39;,result_str)\n\nprint(num_list)\nprint(bytes(int(i) for i in num_list).decode())</code></pre>\n\n<h5 id=\"题目：steg-没有-py\"><a href=\"#题目：steg-没有-py\" class=\"headerlink\" title=\"题目：steg 没有 py\"></a>题目：steg 没有 py</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 安装stegpy\npip install stegpy\ngit clone https:&#x2F;&#x2F;gitcode.net&#x2F;mirrors&#x2F;dhsdshdhk&#x2F;stegpy.git\ncd stegpy\nsudo python3 setup.py install</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">stegpy xx.webp -p\n#如果没有密码直接回车就可\n#具体参数可以stegpy -h 查看帮助</code></pre>\n\n<h5 id=\"题目：来自银河的信号\"><a href=\"#题目：来自银河的信号\" class=\"headerlink\" title=\"题目：来自银河的信号\"></a>题目：来自银河的信号</h5><p>RX-SSTV 工具  略。</p>\n<h5 id=\"利用GPS数据绘制运动轨迹\"><a href=\"#利用GPS数据绘制运动轨迹\" class=\"headerlink\" title=\"利用GPS数据绘制运动轨迹\"></a>利用GPS数据绘制运动轨迹</h5><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://www.gpsvisualizer.com/map_input\">https://www.gpsvisualizer.com/map_input</a><br>把文件导入网站，点击绘制轨迹。</p></blockquote>\n<h4 id=\"利用工具进行文件分离\"><a href=\"#利用工具进行文件分离\" class=\"headerlink\" title=\"利用工具进行文件分离\"></a>利用工具进行文件分离</h4><h5 id=\"文件分离-binwalk-dd\"><a href=\"#文件分离-binwalk-dd\" class=\"headerlink\" title=\"文件分离 binwalk + dd\"></a>文件分离 binwalk + dd</h5><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">binwalk 题目文件名\n&#x2F;&#x2F; 根据binwalk得到的信息\ndd if&#x3D;[题目文件名] of&#x3D;[分离后输出的文件名] skip&#x3D;[根据binwalk得到] bs&#x3D;1</code></pre>\n\n<h5 id=\"binwalk-提取文件\"><a href=\"#binwalk-提取文件\" class=\"headerlink\" title=\"binwalk 提取文件\"></a>binwalk 提取文件</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">binwakl -e test --run-as&#x3D;root</code></pre>\n\n<h5 id=\"foremost-分割文件-x2F-修复文件\"><a href=\"#foremost-分割文件-x2F-修复文件\" class=\"headerlink\" title=\"foremost 分割文件 &#x2F; 修复文件\"></a>foremost 分割文件 &#x2F; 修复文件</h5><p> foremost是一个用来从磁盘映像或文件中恢复文件类型的命令行工具。它可以恢复多种格式的文件,如图片、文档、视频等。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 分割文件\nforemost -i image.png -o output</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 从evidence.img中恢复大小大于100KB的pdf文件。\nforemost -t pdf -s 100k -v -i evidence.img -o output</code></pre>\n\n<p><strong>用法小结</strong>：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">foremost [-v|-V|-h|-T|-Q|-q|-a|-w-d] [-t &lt;type&gt;] [-s &lt;blocks&gt;] [-k &lt;size&gt;]\n    [-b &lt;size&gt;] [-c &lt;file&gt;] [-o &lt;dir&gt;] [-i &lt;file]\n\n-V  - 显示版权信息并退出\n-t  - 指定文件类型.  (-t jpeg,pdf ...)\n-d  - 打开间接块检测 (针对UNIX文件系统)\n-i  - 指定输入文件 (默认为标准输入)\n-a  - 写入所有的文件头部, 不执行错误检测(损坏文件)\n-w  - 向磁盘写入审计文件，不写入任何检测到的文件\n-o  - 设置输出目录 (默认为.&#x2F;output)\n-c  - 设置配置文件 (默认为foremost.conf)\n-q  - 启用快速模式. 在512字节边界执行搜索.\n-Q  - 启用安静模式. 禁用输出消息.\n-v  - 详细模式. 向屏幕上记录所有消息。</code></pre>\n\n<p>注意： 指定存放文件的目录必须为空，不然会报错。<br>-T 选项让foremost自动根据当前时间戳来生成output目录，这时生成的目录是类似这样的 output_Wed Jan 30 16_01_56 2019。</p>\n<h4 id=\"破解压缩包密码\"><a href=\"#破解压缩包密码\" class=\"headerlink\" title=\"破解压缩包密码\"></a>破解压缩包密码</h4><h5 id=\"zip-和-rar-解压\"><a href=\"#zip-和-rar-解压\" class=\"headerlink\" title=\"zip 和 rar 解压\"></a>zip 和 rar 解压</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">unzip 压缩包.zip\nunrar x 压缩包.rar</code></pre>\n\n<h5 id=\"压缩包伪加密\"><a href=\"#压缩包伪加密\" class=\"headerlink\" title=\"压缩包伪加密\"></a>压缩包伪加密</h5><p>zip伪加密是在文件头的加密标志位做修改，进而再打开文件时识被别为加密压缩包。</p>\n<p>寻找 <strong>50 2B 01 02</strong> ，跳过四个字节（1F 00 14 00），就是全局方式位。</p>\n<ul>\n<li>把压缩源文件目录区的全局方式位标记的  01  00 或 09 00  改为  00 00  就可以去除密码</li>\n<li>把压缩源文件目录区的全局方式位标记的  00 00  改为  01  00 或 09 00  就可以添加密码</li>\n</ul>\n<p>同时注意压缩源文件数据区全局方式位是否修改。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 工具局限性很大，建议手动修改。\njava -jar ZipCenOp.jar r test.zip</code></pre>\n\n<h6 id=\"a-压缩源文件数据区\"><a href=\"#a-压缩源文件数据区\" class=\"headerlink\" title=\"a.压缩源文件数据区\"></a>a.压缩源文件数据区</h6><p>50 4B 03 04：这是头文件标记（0x04034b50）<br>14 00：解压文件所需 pkware 版本<br>09 00：全局方式位标记（有无加密）<br>08 00：压缩方式<br>50 A3：最后修改文件时间<br>A5 4A：最后修改文件日期<br>21 38 76 64：CRC-32校验（1480B516）<br>19 00 00 00：压缩后尺寸（25）<br>17 00 00 00：未压缩尺寸（23）<br>08 00：文件名长度<br>00 00：扩展记录长度</p>\n<h6 id=\"b-压缩源文件目录区\"><a href=\"#b-压缩源文件目录区\" class=\"headerlink\" title=\"b.压缩源文件目录区\"></a>b.压缩源文件目录区</h6><p>50 4B 01 02：目录中文件文件头标记(0x02014b50)<br>1F 00：压缩使用的 pkware 版本<br>14 00：解压文件所需 pkware 版本<br>09 00：全局方式位标记（有无加密，这个更改这里进行伪加密，改为09 00打开就会提示有密码了）<br>08 00：压缩方式<br>50 A3：最后修改文件时间<br>A5 4A：最后修改文件日期<br>21 38 76 65：CRC-32校验（1480B516）<br>19 00 00 00：压缩后尺寸（25）<br>17 00 00 00：未压缩尺寸（23）<br>08 00：文件名长度<br>24 00：扩展字段长度<br>00 00：文件注释长度<br>00 00：磁盘开始号<br>00 00：内部文件属性<br>20 00 00 00：外部文件属性<br>00 00 00 00：局部头部偏移量</p>\n<h6 id=\"c-压缩源文件目录结束标志\"><a href=\"#c-压缩源文件目录结束标志\" class=\"headerlink\" title=\"c.压缩源文件目录结束标志\"></a>c.压缩源文件目录结束标志</h6><p>50 4B 05 06：目录结束标记<br>00 00：当前磁盘编号<br>00 00：目录区开始磁盘编号<br>01 00：本磁盘上纪录总数<br>01 00：目录区中纪录总数<br>5A 00 00 00：目录区尺寸大小<br>3F 00 00 00：目录区对第一张磁盘的偏移量<br>00 00 00：ZIP 文件注释长度</p>\n<h5 id=\"识别真假加密\"><a href=\"#识别真假加密\" class=\"headerlink\" title=\"识别真假加密\"></a>识别真假加密</h5><ul>\n<li><p>无加密</p>\n<ul>\n<li>压缩源文件数据区的全局加密应当为00 00</li>\n<li>且压缩源文件目录区的全局方式位标记应当为00 00</li>\n</ul>\n</li>\n<li><p>假加密</p>\n<ul>\n<li>压缩源文件数据区的全局加密应当为00 00</li>\n<li>且压缩源文件目录区的全局方式位标记应当为09 00</li>\n</ul>\n</li>\n<li><p>真加密</p>\n<ul>\n<li>压缩源文件数据区的全局加密应当为09 00</li>\n<li>且压缩源文件目录区的全局方式位标记应当为09 00</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"john-破解压缩包密码\"><a href=\"#john-破解压缩包密码\" class=\"headerlink\" title=\"john 破解压缩包密码\"></a>john 破解压缩包密码</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">zip2john 压缩包.zip &gt;&gt; 1.txt\n# rar2john 压缩包.rar &gt;&gt; 1.txt\njohn 1.txt\n# john john --wordlist&#x3D;&#x2F;usr&#x2F;share&#x2F;wordlists&#x2F;rockyou.txt(设置字典) 1.txt</code></pre>\n\n<p>John支持四种密码破解模式:<br>1.字典模式:在这种模式下，用户只需要提供字典和密码列表用于破解。<br>2.单一破解模式:这是john作者推荐的首选模式。John会使用登录名、全名和家庭通讯录作为候选密码。<br>3.递增模式:在该模式下john会尝试所有可能的密码组合。这是最具威力的一种。<br>4.外部模式:在这种模式下，用户可以使用john的外部破解模式。使用之前，需要创建一个名为(list.external : mode)的配置文件，其中mode由用户分配。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">一些常用命令:\njohn --wordlist&#x3D;passwords.txt hashed_passwords.txt：\n使用字典文件passwords.txt破解哈希密码文件hashed_passwords.txt。\n\njohn --format&#x3D;md5 --wordlist&#x3D;passwords.txt --rules&#x3D;password.rules hashed_passwords.txt：\n使用md5格式、字典文件passwords.txt和规则文件password.rules破解哈希密码文件hashed_passwords.txt。\n\njohn --show hashed_passwords.txt：显示已破解的密码。\n\njohn --incremental hashed_passwords.txt：使用增量模式破解密码。\n\njohn --status：显示当前会话的破解状态。\njohn --restore：恢复中断的会话。\njohn --list&#x3D;formats：列出可用的哈希格式。\njohn --list&#x3D;rules：列出可用的规则集。\n\njohn --single --wordlist&#x3D;passwords.txt hashed_passwords.txt：\n使用字典文件passwords.txt尝试破解哈希密码文件hashed_passwords.txt。\n\njohn --single --wordlist&#x3D;passwords.txt --rules&#x3D;password.rules hashed_passwords.txt：\n使用字典文件passwords.txt和规则文件password.rules尝试破解哈希密码文件hashed_passwords.txt。\n\njohn --single&#x3D;:rule --wordlist&#x3D;passwords.txt hashed_passwords.txt：\n使用指定的规则rule和字典文件passwords.txt尝试破解哈希密码文件hashed_passwords.txt。\n\njohn --single-pair-max&#x3D;4 --wordlist&#x3D;passwords.txt hashed_passwords.txt：\n使用字典文件passwords.txt生成最多4个单词对，并尝试破解哈希密码文件hashed_passwords.txt。\n\njohn --incremental hashed_passwords.txt ：\n用于使用递增模式(可以理解为真-暴力破解)尝试破解哈希密码。</code></pre>\n\n<h5 id=\"hashcat-结合-john-破解压缩包密码\"><a href=\"#hashcat-结合-john-破解压缩包密码\" class=\"headerlink\" title=\"hashcat 结合 john 破解压缩包密码\"></a>hashcat 结合 john 破解压缩包密码</h5><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">-a  指定要使用的破解模式，其值参考后面对参数。“-a 0”字典攻击，“-a 1” 组合攻击；“-a 3”掩码攻击。\n-m  指定要破解的hash类型，如果不指定类型，则默认是MD5\n-o  指定破解成功后的hash及所对应的明文密码的存放位置,可以用它把破解成功的hash写到指定的文件中\n--force 忽略破解过程中的警告信息,跑单条hash可能需要加上此选项\n--show  显示已经破解的hash及该hash所对应的明文\n--increment  启用增量破解模式,你可以利用此模式让hashcat在指定的密码长度范围内执行破解过程\n--increment-min  密码最小长度,后面直接等于一个整数即可,配置increment模式一起使用\n--increment-max  密码最大长度,同上\n--outfile-format 指定破解结果的输出格式id,默认是3\n--username   忽略hash文件中的指定的用户名,在破解linux系统用户密码hash可能会用到\n--remove     删除已被破解成功的hash\n-r       使用自定义破解规则</code></pre>\n\n<p>使用字典破解zip加密文件的指令及输出如下：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">zip2john.exe test.zip &gt; test.txt  # 获取zip加密文件的Hash指令\nhashcat -a 0 -m 17210 test.txt password.txt --force # password.txt中存放密码字典</code></pre>\n\n<h5 id=\"fcrackzip-破解压缩包密码\"><a href=\"#fcrackzip-破解压缩包密码\" class=\"headerlink\" title=\"fcrackzip 破解压缩包密码\"></a>fcrackzip 破解压缩包密码</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo apt-get install fcrackzip</code></pre>\n\n<ul>\n<li>-v 显示实时爆破信息</li>\n<li>-b 暴力破解</li>\n<li>-D 字典破解</li>\n<li>-u 使用unzip命令去尝试</li>\n<li>-p 破解的起始位置</li>\n<li>-l 设置长度，3-3表示最小(3)到最大(3)，也就是限制了密码的长度（从提示.jpg知道密码为3位），</li>\n<li>-c 暴力破解的字符类型，1&#x3D;1<del>9, a&#x3D;a</del>z, A&#x3D;A~Z, !&#x3D;字符, :&#x3D;所有字符</li>\n</ul>\n<h5 id=\"Windows-的-ARCHPR\"><a href=\"#Windows-的-ARCHPR\" class=\"headerlink\" title=\"Windows 的 ARCHPR\"></a>Windows 的 ARCHPR</h5><p>略</p>\n<h4 id=\"stegslove-工具的利用\"><a href=\"#stegslove-工具的利用\" class=\"headerlink\" title=\"stegslove 工具的利用\"></a>stegslove 工具的利用</h4><h5 id=\"stegsolve-的基本使用\"><a href=\"#stegsolve-的基本使用\" class=\"headerlink\" title=\"stegsolve 的基本使用\"></a>stegsolve 的基本使用</h5><p>将图片导入，然后不停变换类型找二维码或者flag。</p>\n<h5 id=\"stegsolve-解决-lsb-隐写\"><a href=\"#stegsolve-解决-lsb-隐写\" class=\"headerlink\" title=\"stegsolve 解决 lsb 隐写\"></a>stegsolve 解决 lsb 隐写</h5><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>用zsteg更直接</p></blockquote>\n<p>LSB隐写就是修改RGB颜色分量的最低二进制位也就是最低有效位（LSB），而人类的眼睛不会注意到这前后的变化，每个像数可以携带3比特的信息。</p>\n<p>对于LSB隐写的图片，我们用StegSolve打开图片，选择Data Extract模块，由于是RGB三原色的最低位隐写，提取Red，Green，和Blue的0通道信息，在这三个颜色的0通道上打勾，并按下Preview键。</p>\n<p>注意不同的文件头。</p>\n<h5 id=\"stegsolve-将两张图片混合\"><a href=\"#stegsolve-将两张图片混合\" class=\"headerlink\" title=\"stegsolve 将两张图片混合\"></a>stegsolve 将两张图片混合</h5><p>先用stegsolve打开其中一张，然后使用image combiner拼接，转换混合方式，得到二维码。</p>\n<h4 id=\"zsteg-分析图片隐写\"><a href=\"#zsteg-分析图片隐写\" class=\"headerlink\" title=\"zsteg 分析图片隐写\"></a>zsteg 分析图片隐写</h4><h5 id=\"安装zsteg\"><a href=\"#安装zsteg\" class=\"headerlink\" title=\"安装zsteg\"></a>安装zsteg</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo su\napt-get update\napt-get intall gem\ngem install zsteg</code></pre>\n\n<h5 id=\"zsteg的用法\"><a href=\"#zsteg的用法\" class=\"headerlink\" title=\"zsteg的用法\"></a>zsteg的用法</h5><p>用法: zsteg [选项] 文件名.png [参数字符串]</p>\n<ul>\n<li>-a, –all 尝试所有已知的隐写方法</li>\n<li>-E, –extract NAME 提取指定的Payload,NAME类似’1b,rgb,lsb’</li>\n</ul>\n<p>迭代&#x2F;提取参数:</p>\n<ul>\n<li>-o,<ul>\n<li>–order X 设置像素迭代顺序(默认:’auto’)<br>有效值:ALL,xy,yx,XY,YX,xY,Xy,bY等</li>\n</ul>\n</li>\n<li>-c,<ul>\n<li>–channels X 设置通道(R&#x2F;G&#x2F;B&#x2F;A)或任意组合,使用逗号分隔<br>有效值:r,g,b,a,rg,bgr,rgba,r3g2b3等</li>\n</ul>\n</li>\n<li>-b,<ul>\n<li>–bits N 设置位数,单个整数或’1,3,5’范围’1-8’<br>高级:指定单独位,如’00001110’或’0x88’</li>\n<li>–lsb 低位在前</li>\n<li>–msb 高位在前</li>\n</ul>\n</li>\n<li>-P,<ul>\n<li>–prime 只分析&#x2F;提取素数字节&#x2F;像素</li>\n<li>–shift N 在前面添加N个零位</li>\n<li>–invert 翻转位(异或0xff)</li>\n<li>–pixel-align 像素对齐隐写数据</li>\n</ul>\n</li>\n</ul>\n<p>分析参数:</p>\n<ul>\n<li>-l,<ul>\n<li>–limit N 限制检查字节数,0为无限(默认:256)</li>\n<li>–[no-]file 使用’file’检测数据类型(默认:YES)</li>\n<li>–no-strings 禁用ASCII字符串检索(默认:启用)</li>\n</ul>\n</li>\n<li>-s,<ul>\n<li>–strings X ASCII字符串模式:first,all,longest,none(默认:first)</li>\n</ul>\n</li>\n<li>-n,<ul>\n<li>–min-str-len X 最小字符串长度(默认:8)</li>\n</ul>\n</li>\n<li>-v,<ul>\n<li>–verbose 详细输出(可多次使用)</li>\n</ul>\n</li>\n<li>-q,<ul>\n<li>–quiet 静默警告(可多次使用)</li>\n</ul>\n</li>\n<li>-C,<ul>\n<li>–[no-]color 强制&#x2F;禁用颜色输出(默认:auto)</li>\n</ul>\n</li>\n</ul>\n<p>参数快捷方式:</p>\n<ul>\n<li>zsteg fname.png 2b,b,lsb,xy &#x3D;&#x3D;&gt; –bits 2 –channel b –lsb –order xy</li>\n</ul>\n<h5 id=\"zsteg实例使用\"><a href=\"#zsteg实例使用\" class=\"headerlink\" title=\"zsteg实例使用\"></a>zsteg实例使用</h5><ol>\n<li><p>尝试所有已知方法：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">zsteg -a filename.png</code></pre>\n</li>\n<li><p>提取指定的隐写载荷：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">zsteg -E 1b,rgb,lsb filename.png</code></pre>\n</li>\n<li><p>设置像素迭代顺序为xy，通道为红色和蓝色，使用3位和5位的位数：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">zsteg -o xy -c r,b -b 3,5 filename.png</code></pre>\n</li>\n<li><p>仅分析&#x2F;提取素数字节&#x2F;像素，设置最小字符串长度为10：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">zsteg -P -n 10 filename.png</code></pre>\n</li>\n<li><p>禁用ASCII字符串查找，使用最长模式：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">zsteg --no-strings -s longest filename.png</code></pre></li>\n</ol>\n<h4 id=\"convert-分离-gif-amp-amp-montage-图片拼接\"><a href=\"#convert-分离-gif-amp-amp-montage-图片拼接\" class=\"headerlink\" title=\"convert 分离 gif &amp;&amp; montage 图片拼接\"></a>convert 分离 gif &amp;&amp; montage 图片拼接</h4><p><code>convert</code>和<code>montage</code>命令都是Imagemagick软件包中的一部分。</p>\n<ul>\n<li><code>convert</code>命令可以将GIF文件分解成PNG图片。</li>\n<li><code>montage</code>命令可以拼接多个PNG图片。</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 安装imagemagick\nsudo apt-get update\nsudo apt-get install imagemagick</code></pre>\n\n<ul>\n<li>将GIF文件分解成PNG图片：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">convert input.gif output-%d.png</code></pre>\n\n<ul>\n<li>将多个PNG图片垂直拼接成一个大的PNG图片：</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">montage output*.png -tile x1 -geometry +0+0 flag.png</code></pre>\n\n<h5 id=\"convert命令的基本用法\"><a href=\"#convert命令的基本用法\" class=\"headerlink\" title=\"convert命令的基本用法\"></a>convert命令的基本用法</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">convert [选项] [输入文件] [输出文件]</code></pre>\n\n<ul>\n<li>[选项]：可以使用各种选项来控制转换和处理的方式。<ul>\n<li>-resize &lt;宽度&gt;x&lt;高度&gt;<ul>\n<li>调整图像的大小。</li>\n</ul>\n</li>\n<li>-rotate &lt;角度&gt;<ul>\n<li>旋转图像。</li>\n</ul>\n</li>\n<li>-crop &lt;宽度&gt;x&lt;高度&gt;+&lt;X偏移&gt;+&lt;Y偏移&gt;<ul>\n<li>裁剪图像。</li>\n</ul>\n</li>\n<li>-flip<ul>\n<li>垂直翻转图像。</li>\n</ul>\n</li>\n<li>-flop<ul>\n<li>水平翻转图像。</li>\n</ul>\n</li>\n<li>-format &lt;格式&gt;<ul>\n<li>指定输出文件的格式。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>[输入文件]：指定要转换或处理的输入图像文件。</li>\n<li>[输出文件]：指定生成的输出图像文件。</li>\n</ul>\n<h5 id=\"montage命令的基本用法\"><a href=\"#montage命令的基本用法\" class=\"headerlink\" title=\"montage命令的基本用法\"></a>montage命令的基本用法</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">montage [输入文件] [选项] [输出文件]</code></pre>\n\n<ul>\n<li>[输入文件]：指定要拼接的图像文件列表，可以使用通配符来匹配多个文件。<ul>\n<li>例如，image1.png image2.png 或  *.png。</li>\n</ul>\n</li>\n<li>[选项]：可以使用各种选项来控制拼接的方式和结果。<ul>\n<li>-tile &lt;列数&gt;x&lt;行数&gt;：指定拼接后的图像的布局。<ul>\n<li>例如 -tile 2x2 表示两列两行。</li>\n</ul>\n</li>\n<li>-geometry &lt;宽度&gt;x&lt;高度&gt;+&lt;X偏移&gt;+&lt;Y偏移&gt;: 指定每个输入图像的大小和位置。<ul>\n<li>&lt;宽度&gt;x&lt;高度&gt; 表示每个图像的尺寸，</li>\n<li>+&lt;X偏移&gt;+&lt;Y偏移&gt; 表示每个图像的位置偏移量。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>[输出文件]：指定生成的拼接图像的文件名。</li>\n</ul>\n<h4 id=\"其他一些文件格式的隐写\"><a href=\"#其他一些文件格式的隐写\" class=\"headerlink\" title=\"其他一些文件格式的隐写\"></a>其他一些文件格式的隐写</h4><h5 id=\"mp3文件private-bit隐写\"><a href=\"#mp3文件private-bit隐写\" class=\"headerlink\" title=\"mp3文件private bit隐写\"></a>mp3文件private bit隐写</h5><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>MP3文件private bit隐写技术是利用MP3文件私有位来隐藏信息的一种隐写方法。</p></blockquote>\n<ol>\n<li>在MP3文件头部隐写:MP3文件头部包含诸如版本号、层数、采样率、位率等信息,这部分信息量较大,可以隐藏较长的秘密信息。隐写信息可以隐藏在帧同步字、版权标志、原始音频标志等字段中。</li>\n<li>在MP3帧头隐写:每个MP3帧头包含11字节的信息,可以隐藏约33位的信息。隐写信息可以隐藏在帧同步字、MPEG音频版本号、层、错误保护等字段中。</li>\n<li>在MP3频域中隐写:通过修改MP3频谱来隐藏信息,如最低有效位编码、相位编码、频率映射等方法。这种方法对音质的影响较小,但是隐藏信息量也较小。</li>\n<li>在MP3时间域中隐写:通过调制MP3音频样本值来隐藏信息,如最小有效位调制、相位调制等方法。这种方法可以隐藏更多信息,但是对音质的影响也较大。</li>\n<li>结合MP3压缩特点隐写:利用MP3压缩过程中产生的冗余度来隐藏信息。如在Huffman编码表中隐写、在SCALEFACTOR的四舍五入部分隐写等。这类方法对音质的影响很小,但是隐藏信息量也较小。</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th align=\"center\">名称</th>\n<th align=\"center\">长度(bit)</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">syncword</td>\n<td align=\"center\">12</td>\n<td>同步头，表示一帧数据的开始，共12位，全1即0XFFF</td>\n</tr>\n<tr>\n<td align=\"center\">ID</td>\n<td align=\"center\">1</td>\n<td>算法标识位，”1”表示MPEG音频</td>\n</tr>\n<tr>\n<td align=\"center\">layer</td>\n<td align=\"center\">2</td>\n<td>用来说明是哪一层编码</td>\n</tr>\n<tr>\n<td align=\"center\">protection_bit</td>\n<td align=\"center\">1</td>\n<td>用来表明冗余信息是否被加到音频流中，以进行错误检测和错误隐蔽。”1”是未增加”0”是增加</td>\n</tr>\n<tr>\n<td align=\"center\">bitrate_index</td>\n<td align=\"center\">4</td>\n<td>用来指示该帧的bitrate</td>\n</tr>\n<tr>\n<td align=\"center\">sampling_frequency</td>\n<td align=\"center\">2</td>\n<td>用来指示采样频率</td>\n</tr>\n<tr>\n<td align=\"center\">padding_bit</td>\n<td align=\"center\">1</td>\n<td>如果该位为1，那么帧中包含一个额外槽，用于把平均位率调节到采样频率，否则该位必须为0。(是否对未填满的帧进行补齐)</td>\n</tr>\n<tr>\n<td align=\"center\">private_bit</td>\n<td align=\"center\">1</td>\n<td>留做私用</td>\n</tr>\n<tr>\n<td align=\"center\">mode</td>\n<td align=\"center\">2</td>\n<td>定义通道模式</td>\n</tr>\n<tr>\n<td align=\"center\">mode_extension</td>\n<td align=\"center\">2</td>\n<td>用来标识采用了哪一种joint_stereo</td>\n</tr>\n<tr>\n<td align=\"center\">copyright</td>\n<td align=\"center\">1</td>\n<td>表明版权用，“1”表示有版权，“0”表示没有版权。</td>\n</tr>\n<tr>\n<td align=\"center\">original&#x2F;home</td>\n<td align=\"center\">1</td>\n<td>表明原版还是复制，“1”表示原版，“0”表示复制。</td>\n</tr>\n<tr>\n<td align=\"center\">emphasis</td>\n<td align=\"center\">2</td>\n<td>表明加重音类型</td>\n</tr>\n</tbody></table>\n<p>脚本：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import re\nimport binascii\nn &#x3D; 235986              #第一个private bit起始位置\nresult &#x3D; &#39;&#39;\nfina &#x3D; &#39;&#39;\nnumber &#x3D; 0\nlist &#x3D; [0,1,26,50,75,99,124,148,173,197,222,246,271,295,320,344,369,393,418]     \n#组大小为417\nfile &#x3D; open(&#39;1.mp3&#39;,&#39;rb&#39;)        #rb是读取二进制文件\nwhile n &lt; 1369844 :      #已经可以结束的位置，可以发现后面private_bit的值都为0\n    file.seek(n,0)              #文件游标移动到n\n    if number in list:\n        n +&#x3D; 417\n    else:\n        n +&#x3D; 418\n    file_read_result &#x3D; file.read(1)      #读取一个字节\n    read_content &#x3D; bin(ord(file_read_result))[-1]   \n    #ord返回对应数字 bin用二进制表示  最后一位返回的是值\n    result &#x3D; result + read_content\n    number +&#x3D; 1\n#print result\n\nfina &#x3D; &#39;&#39;\ntextArr &#x3D; re.findall(&#39;.&#123;&#39;+str(8)+&#39;&#125;&#39;, result)    \n#在字符串result中匹配长度为8的字符串为一组并返回列表\nfor i in textArr:\n    fina &#x3D; fina + chr(int(i,2)).strip(&#39;\\n&#39;)         #返回字符\nprint (fina)</code></pre>\n\n<h5 id=\"word-隐写\"><a href=\"#word-隐写\" class=\"headerlink\" title=\"word 隐写\"></a>word 隐写</h5><ul>\n<li>Ctrl + A （白色字体）</li>\n<li>字体 &gt; 隐藏</li>\n</ul>\n<h5 id=\"利用-audacity-解决音频隐写\"><a href=\"#利用-audacity-解决音频隐写\" class=\"headerlink\" title=\"利用 audacity 解决音频隐写\"></a>利用 audacity 解决音频隐写</h5><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 安装audacity\nsudo apt-get install audacity</code></pre>\n\n<ul>\n<li>摩斯密码（波形谱）</li>\n<li>频谱图</li>\n</ul>\n<h4 id=\"usb-流量分析\"><a href=\"#usb-流量分析\" class=\"headerlink\" title=\"usb 流量分析\"></a>usb 流量分析</h4><ul>\n<li>八字节 为键盘流量</li>\n<li>四字节 为鼠标流量</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tshark -r &#39;.\\12.pcapng&#39; -T fields -e usb.capdata &gt; test.txt\n# -T fields: 指定输出格式为字段列表。\n# -e usb.capdata: 指定要输出的字段是usb.capdata,即USB数据包的有效数据部分。</code></pre>\n\n<p>分析键盘数据脚本：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">normalKeys &#x3D; &#123;&quot;04&quot;:&quot;a&quot;, &quot;05&quot;:&quot;b&quot;, &quot;06&quot;:&quot;c&quot;, &quot;07&quot;:&quot;d&quot;, &quot;08&quot;:&quot;e&quot;, &quot;09&quot;:&quot;f&quot;, &quot;0a&quot;:&quot;g&quot;, &quot;0b&quot;:&quot;h&quot;, &quot;0c&quot;:&quot;i&quot;, &quot;0d&quot;:&quot;j&quot;, &quot;0e&quot;:&quot;k&quot;, &quot;0f&quot;:&quot;l&quot;, &quot;10&quot;:&quot;m&quot;, &quot;11&quot;:&quot;n&quot;, &quot;12&quot;:&quot;o&quot;, &quot;13&quot;:&quot;p&quot;, &quot;14&quot;:&quot;q&quot;, &quot;15&quot;:&quot;r&quot;, &quot;16&quot;:&quot;s&quot;, &quot;17&quot;:&quot;t&quot;, &quot;18&quot;:&quot;u&quot;, &quot;19&quot;:&quot;v&quot;, &quot;1a&quot;:&quot;w&quot;, &quot;1b&quot;:&quot;x&quot;, &quot;1c&quot;:&quot;y&quot;, &quot;1d&quot;:&quot;z&quot;,&quot;1e&quot;:&quot;1&quot;, &quot;1f&quot;:&quot;2&quot;, &quot;20&quot;:&quot;3&quot;, &quot;21&quot;:&quot;4&quot;, &quot;22&quot;:&quot;5&quot;, &quot;23&quot;:&quot;6&quot;,&quot;24&quot;:&quot;7&quot;,&quot;25&quot;:&quot;8&quot;,&quot;26&quot;:&quot;9&quot;,&quot;27&quot;:&quot;0&quot;,&quot;28&quot;:&quot;&lt;RET&gt;&quot;,&quot;29&quot;:&quot;&lt;ESC&gt;&quot;,&quot;2a&quot;:&quot;&lt;DEL&gt;&quot;, &quot;2b&quot;:&quot;\\t&quot;,&quot;2c&quot;:&quot;&lt;SPACE&gt;&quot;,&quot;2d&quot;:&quot;-&quot;,&quot;2e&quot;:&quot;&#x3D;&quot;,&quot;2f&quot;:&quot;[&quot;,&quot;30&quot;:&quot;]&quot;,&quot;31&quot;:&quot;\\\\&quot;,&quot;32&quot;:&quot;&lt;NON&gt;&quot;,&quot;33&quot;:&quot;;&quot;,&quot;34&quot;:&quot;&#39;&quot;,&quot;35&quot;:&quot;&lt;GA&gt;&quot;,&quot;36&quot;:&quot;,&quot;,&quot;37&quot;:&quot;.&quot;,&quot;38&quot;:&quot;&#x2F;&quot;,&quot;39&quot;:&quot;&lt;CAP&gt;&quot;,&quot;3a&quot;:&quot;&lt;F1&gt;&quot;,&quot;3b&quot;:&quot;&lt;F2&gt;&quot;, &quot;3c&quot;:&quot;&lt;F3&gt;&quot;,&quot;3d&quot;:&quot;&lt;F4&gt;&quot;,&quot;3e&quot;:&quot;&lt;F5&gt;&quot;,&quot;3f&quot;:&quot;&lt;F6&gt;&quot;,&quot;40&quot;:&quot;&lt;F7&gt;&quot;,&quot;41&quot;:&quot;&lt;F8&gt;&quot;,&quot;42&quot;:&quot;&lt;F9&gt;&quot;,&quot;43&quot;:&quot;&lt;F10&gt;&quot;,&quot;44&quot;:&quot;&lt;F11&gt;&quot;,&quot;45&quot;:&quot;&lt;F12&gt;&quot;&#125;\n \nshiftKeys &#x3D; &#123;&quot;04&quot;:&quot;A&quot;, &quot;05&quot;:&quot;B&quot;, &quot;06&quot;:&quot;C&quot;, &quot;07&quot;:&quot;D&quot;, &quot;08&quot;:&quot;E&quot;, &quot;09&quot;:&quot;F&quot;, &quot;0a&quot;:&quot;G&quot;, &quot;0b&quot;:&quot;H&quot;, &quot;0c&quot;:&quot;I&quot;, &quot;0d&quot;:&quot;J&quot;, &quot;0e&quot;:&quot;K&quot;, &quot;0f&quot;:&quot;L&quot;, &quot;10&quot;:&quot;M&quot;, &quot;11&quot;:&quot;N&quot;, &quot;12&quot;:&quot;O&quot;, &quot;13&quot;:&quot;P&quot;, &quot;14&quot;:&quot;Q&quot;, &quot;15&quot;:&quot;R&quot;, &quot;16&quot;:&quot;S&quot;, &quot;17&quot;:&quot;T&quot;, &quot;18&quot;:&quot;U&quot;, &quot;19&quot;:&quot;V&quot;, &quot;1a&quot;:&quot;W&quot;, &quot;1b&quot;:&quot;X&quot;, &quot;1c&quot;:&quot;Y&quot;, &quot;1d&quot;:&quot;Z&quot;,&quot;1e&quot;:&quot;!&quot;, &quot;1f&quot;:&quot;@&quot;, &quot;20&quot;:&quot;#&quot;, &quot;21&quot;:&quot;$&quot;, &quot;22&quot;:&quot;%&quot;, &quot;23&quot;:&quot;^&quot;,&quot;24&quot;:&quot;&amp;&quot;,&quot;25&quot;:&quot;*&quot;,&quot;26&quot;:&quot;(&quot;,&quot;27&quot;:&quot;)&quot;,&quot;28&quot;:&quot;&lt;RET&gt;&quot;,&quot;29&quot;:&quot;&lt;ESC&gt;&quot;,&quot;2a&quot;:&quot;&lt;DEL&gt;&quot;, &quot;2b&quot;:&quot;\\t&quot;,&quot;2c&quot;:&quot;&lt;SPACE&gt;&quot;,&quot;2d&quot;:&quot;_&quot;,&quot;2e&quot;:&quot;+&quot;,&quot;2f&quot;:&quot;&#123;&quot;,&quot;30&quot;:&quot;&#125;&quot;,&quot;31&quot;:&quot;|&quot;,&quot;32&quot;:&quot;&lt;NON&gt;&quot;,&quot;33&quot;:&quot;\\&quot;&quot;,&quot;34&quot;:&quot;:&quot;,&quot;35&quot;:&quot;&lt;GA&gt;&quot;,&quot;36&quot;:&quot;&lt;&quot;,&quot;37&quot;:&quot;&gt;&quot;,&quot;38&quot;:&quot;?&quot;,&quot;39&quot;:&quot;&lt;CAP&gt;&quot;,&quot;3a&quot;:&quot;&lt;F1&gt;&quot;,&quot;3b&quot;:&quot;&lt;F2&gt;&quot;, &quot;3c&quot;:&quot;&lt;F3&gt;&quot;,&quot;3d&quot;:&quot;&lt;F4&gt;&quot;,&quot;3e&quot;:&quot;&lt;F5&gt;&quot;,&quot;3f&quot;:&quot;&lt;F6&gt;&quot;,&quot;40&quot;:&quot;&lt;F7&gt;&quot;,&quot;41&quot;:&quot;&lt;F8&gt;&quot;,&quot;42&quot;:&quot;&lt;F9&gt;&quot;,&quot;43&quot;:&quot;&lt;F10&gt;&quot;,&quot;44&quot;:&quot;&lt;F11&gt;&quot;,&quot;45&quot;:&quot;&lt;F12&gt;&quot;&#125;\nnums &#x3D; []\nkeys &#x3D; open(&#39;1.txt&#39;) # 你导出的数据文档\nfor line in keys:\n    # print(line)\n    if len(line)!&#x3D;17: # 首先过滤掉鼠标等其他设备的USB流量\n         continue\n    nums.append(line[0:2]+line[4:6]) # 取一、三字节\n    # print(nums)\nkeys.close()\noutput &#x3D; &quot;&quot;\nfor n in nums:\n    if n[2:4] &#x3D;&#x3D; &quot;00&quot; :\n        continue\n    if n[2:4] in normalKeys:\n        if n[0:2]&#x3D;&#x3D;&quot;02&quot;: # 表示按下了shift\n            output +&#x3D; shiftKeys [n[2:4]]\n        else :\n            output +&#x3D; normalKeys [n[2:4]]\n    else:\n        output +&#x3D; &#39;[unknown]&#39;\nprint(&#39;output :&#39; + output)</code></pre>\n\n<h5 id=\"tshark-的用法\"><a href=\"#tshark-的用法\" class=\"headerlink\" title=\"tshark 的用法\"></a>tshark 的用法</h5><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>最好不要用root用户使用tshark。</p></blockquote>\n<ol>\n<li>捕获实时网络数据包<br>tshark -i eth0<br>(eth0是接口名称,可以换成其他接口)</li>\n<li>读取pcap文件<br>tshark -r packet.pcap</li>\n<li>指定数据包过滤条件<br>tshark -f “tcp port 80”   (只捕获目标端口是80的TCP数据包)</li>\n<li>指定输出格式<br>tshark -T fields -e frame.time -e eth.src -e ip.src (输出特定的字段)<br>tshark -T json (输出json格式)</li>\n<li>保存捕获的数据包<br>tshark -w output.pcap</li>\n<li>统计数据包信息<br>tshark -z io,phs (统计每秒数据包数)<br>tshark -z conv,tcp (统计TCP会话信息)</li>\n<li>解码数据包<br>tshark -d tcp.port&#x3D;&#x3D;8000,http (解码目标端口8000的http数据)</li>\n<li>读取数据包时设置过滤条件<br>tshark -r packet.pcap -Y “http.request” (只读取HTTP请求数据包)</li>\n</ol>\n<h4 id=\"一些编码与加密方式\"><a href=\"#一些编码与加密方式\" class=\"headerlink\" title=\"一些编码与加密方式\"></a>一些编码与加密方式</h4><h5 id=\"HTML-实体编码\"><a href=\"#HTML-实体编码\" class=\"headerlink\" title=\"HTML 实体编码\"></a>HTML 实体编码</h5><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://www.w3school.com.cn/html/html_charset.asp\">https://www.w3school.com.cn/html/html_charset.asp</a><br>HTML 实体是一段以连字号(&amp;)开头、以分号(;)结尾的文本(字符串)。</p></blockquote>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;!-- 例如 --&gt;\n&amp;#x66;&amp;#x6c;&amp;#x61;&amp;#x67;&amp;#x7b;&amp;#x68;&amp;#x30;&amp;#x77;\n&amp;#x5f;&amp;#x34;&amp;#x62;&amp;#x6f;&amp;#x75;&amp;#x54;&amp;#x5f;&amp;#x65;\n&amp;#x6e;&amp;#x63;&amp;#x30;&amp;#x64;&amp;#x65;&amp;#x5f;&amp;#x34;\n&amp;#x6e;&amp;#x64;&amp;#x5f;&amp;#x70;&amp;#x6e;&amp;#x47;&amp;#x7d;\n\nflag&#123;h0w_4bouT_enc0de_4nd_pnG&#125;</code></pre>\n\n<h5 id=\"base64-命令行编码和解码\"><a href=\"#base64-命令行编码和解码\" class=\"headerlink\" title=\"base64 命令行编码和解码\"></a>base64 命令行编码和解码</h5><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Linux的命令行就可以完成</p></blockquote>\n<ol>\n<li>base64编码<br>（1）base64 file<br>功能：从指定的文件file中读取数据，编码为base64的字符串然后输出；<br>（2）echo “string” | base64<br>功能：将字符串string+换行编码为base64的字符串然后输出；<br>（3）echo -n “string” | base64<br>功能：将字符串string编码为base64的字符串然后输出；</li>\n<li>base64解码<br>（1）base64 -d file<br>功能：从指定的文件file中读取已经过base64编码的数据，然后进行解码，并输出解码后的字符串；<br>（2）echo “str” | base64 -d<br>功能：对base64编码的字符串str和空行进行解码，然后将解码后的字符串输出；<br>（3）echo -n “str” | base64 -d<br>功能：对base64编码的字符串str进行解码，然后将解码后的字符串输出；</li>\n</ol>\n<h5 id=\"01248-密码-云影密码\"><a href=\"#01248-密码-云影密码\" class=\"headerlink\" title=\"01248 密码( 云影密码 )\"></a>01248 密码( 云影密码 )</h5><p>该密码又称为云影密码，使用 01248 四个数字，其中 0 用来表示间隔，其他数字以加法可以表示出 如：28&#x3D;10，124&#x3D;7，18&#x3D;9，再用 1-&gt;26 表示 A-&gt;Z。</p>\n<p>特点：只有 01248</p>\n<p>解密脚本：</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def decode(cipher):\n    charList &#x3D; [chr(i) for i in range(ord(&#39;A&#39;),ord(&#39;Z&#39;)+1)]\n    ret &#x3D; []\n    plaintext &#x3D; [i for i in cipher.split(&#39;0&#39;)]\n    for i in plaintext:\n        tmp &#x3D; 0\n        for j in range(len(i)):\n            tmp +&#x3D; int(i[j])\n        ret.append(charList[tmp-1])\n    return &#39;&#39;.join(ret)\ntest &#x3D; decode(&#39;密文&#39;)\nprint(test)</code></pre>\n\n<h5 id=\"Affine密码-仿射密码\"><a href=\"#Affine密码-仿射密码\" class=\"headerlink\" title=\"Affine密码(仿射密码)\"></a>Affine密码(仿射密码)</h5><p>仿射密码是一种表单代换密码，字母表的每个字母相应的值使用一个简单的数学函数对应一个数值，再把对应数值转换成字母。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"http://www.hiencode.com/affine.html\">http://www.hiencode.com/affine.html</a></p></blockquote>\n<h5 id=\"base家族\"><a href=\"#base家族\" class=\"headerlink\" title=\"base家族\"></a>base家族</h5><h6 id=\"base16-编码\"><a href=\"#base16-编码\" class=\"headerlink\" title=\"base16 编码\"></a>base16 编码</h6><p>包含数字0-9以及大写字母ABCDEF</p>\n<p>不可能用到“&#x3D;”填充</p>\n<h6 id=\"base32-编码\"><a href=\"#base32-编码\" class=\"headerlink\" title=\"base32 编码\"></a>base32 编码</h6><p>包含大写字母（A-Z）和数字234567</p>\n<p>有“&#x3D;”符号作为填充</p>\n<h6 id=\"base64-编码\"><a href=\"#base64-编码\" class=\"headerlink\" title=\"base64 编码\"></a>base64 编码</h6><p>包含大写字母（A-Z）、小写字母（a-z）、数字0——9以及+&#x2F;</p>\n<p>有“&#x3D;”符号作为填充</p>\n<h6 id=\"base36-编码\"><a href=\"#base36-编码\" class=\"headerlink\" title=\"base36 编码\"></a>base36 编码</h6><p>数字0–9 大写字母A–Z</p>\n<h6 id=\"base45-编码\"><a href=\"#base45-编码\" class=\"headerlink\" title=\"base45 编码\"></a>base45 编码</h6><p>数字0-9 大写字母A-Z 符号 $%*+-.&#x2F;:</p>\n<h6 id=\"base58-编码\"><a href=\"#base58-编码\" class=\"headerlink\" title=\"base58 编码\"></a>base58 编码</h6><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz</code></pre>\n\n<p>相比 Base_64，Base_58 不使用数字 “0“，字母大写“O“，字母大写 “I“，和字母小写 “l“，以及 “+“ 和 “&#x2F;“ 符号，比Base64共减少6个字符，故称着Base58</p>\n<h6 id=\"base62-编码\"><a href=\"#base62-编码\" class=\"headerlink\" title=\"base62 编码\"></a>base62 编码</h6><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789</code></pre>\n\n<p>Base62使用了62个字符编码，包括0-9，a-z，A-Z。现在各个社交网站的短URL，基本都是用Base62来编码的</p>\n<h6 id=\"base85-编码\"><a href=\"#base85-编码\" class=\"headerlink\" title=\"base85 编码\"></a>base85 编码</h6><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">$%()*+,-.&#x2F;0123456789:;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_&#96;abcdefghijklmnopqrstuvwxyz&#123;|&#125;~</code></pre>\n\n<p>Base85 可用于在 XML 文件中存储二进制数据，相比 Base94 不带 !”#&amp;’&lt;&#x3D;&gt;\\ 这 9 个字符， 无需转义。</p>\n<h6 id=\"base91-编码\"><a href=\"#base91-编码\" class=\"headerlink\" title=\"base91 编码\"></a>base91 编码</h6><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!#$%&amp;()*+,.&#x2F;:;&lt;&#x3D;&gt;?@[]^_&#96;&#123;|&#125;~&#39;</code></pre>\n\n<p>在94个可打印的ASCII字符（0x21-0x7e）中，以下三个字符被省略以构建base91字母表：<br>-（破折号，0x2d）<br>\\（反斜杠，0x5C）<br>‘（撇号，0x27）</p>\n<h6 id=\"base92-编码\"><a href=\"#base92-编码\" class=\"headerlink\" title=\"base92 编码\"></a>base92 编码</h6><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">!#$%&amp;&#39;()*+,-.&#x2F;0123456789:;&lt;&#x3D;&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_abcdefghijklmnopqrstuvwxyz&#123;|&#125;~</code></pre>\n\n<p>比 base91 多了一个 \\ ，比 Base94 少了 ‘ - 这 2 个字符。</p>\n<h6 id=\"base94-编码\"><a href=\"#base94-编码\" class=\"headerlink\" title=\"base94 编码\"></a>base94 编码</h6><p>94个可打印的ASCII字符。</p>\n<h5 id=\"培根密码\"><a href=\"#培根密码\" class=\"headerlink\" title=\"培根密码\"></a>培根密码</h5><p>只有A 和 B（或者两种不同的符号）组成不同的字母。</p>\n<table>\n<thead>\n<tr>\n<th>字母</th>\n<th>编码</th>\n<th>字母</th>\n<th>编码</th>\n<th>字母</th>\n<th>编码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>A&#x2F;a</td>\n<td>aaaaa</td>\n<td>B&#x2F;b</td>\n<td>aaaab</td>\n<td>C&#x2F;c</td>\n<td>aaaba</td>\n</tr>\n<tr>\n<td>D&#x2F;d</td>\n<td>aaabb</td>\n<td>E&#x2F;e</td>\n<td>aabaa</td>\n<td>F&#x2F;f</td>\n<td>aabab</td>\n</tr>\n<tr>\n<td>G&#x2F;g</td>\n<td>aabba</td>\n<td>H&#x2F;h</td>\n<td>aabbb</td>\n<td>I&#x2F;i</td>\n<td>abaaa</td>\n</tr>\n<tr>\n<td>J&#x2F;j</td>\n<td>abaab</td>\n<td>K&#x2F;k</td>\n<td>ababa</td>\n<td>L&#x2F;l</td>\n<td>ababb</td>\n</tr>\n<tr>\n<td>M&#x2F;m</td>\n<td>abbaa</td>\n<td>N&#x2F;n</td>\n<td>abbab</td>\n<td>O&#x2F;o</td>\n<td>abbba</td>\n</tr>\n<tr>\n<td>P&#x2F;p</td>\n<td>abbbb</td>\n<td>Q&#x2F;q</td>\n<td>baaaa</td>\n<td>R&#x2F;r</td>\n<td>baaab</td>\n</tr>\n<tr>\n<td>S&#x2F;s</td>\n<td>baaba</td>\n<td>T&#x2F;t</td>\n<td>baabb</td>\n<td>U&#x2F;u</td>\n<td>babaa</td>\n</tr>\n<tr>\n<td>V&#x2F;v</td>\n<td>babab</td>\n<td>W&#x2F;w</td>\n<td>babba</td>\n<td>X&#x2F;x</td>\n<td>babbb</td>\n</tr>\n<tr>\n<td>Y&#x2F;y</td>\n<td>bbaaa</td>\n<td>Z&#x2F;z</td>\n<td>bbaab</td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h5 id=\"凯撒密码\"><a href=\"#凯撒密码\" class=\"headerlink\" title=\"凯撒密码\"></a>凯撒密码</h5><p>将字母表中的每个字母向后（或向前）移动固定的位数来进行加密。</p>\n<h5 id=\"encodeURL-和-encodeURLComponent-的区别\"><a href=\"#encodeURL-和-encodeURLComponent-的区别\" class=\"headerlink\" title=\"encodeURL 和 encodeURLComponent 的区别\"></a>encodeURL 和 encodeURLComponent 的区别</h5><ul>\n<li><code>encodeURI()</code>方法用于对整个URL进行编码，包括协议、域名、路径和查询参数等部分。它会将URL中的特殊字符（如空格、冒号、斜杠等）转换为它们的UTF-8编码值，但保留一些特殊字符（如冒号、斜杠、问号等），以保持URL的完整性。</li>\n<li><code>encodeURIComponent()</code>方法则用于对URL中的特定部分进行编码，包括查询参数值等。与<code>encodeURI()</code>不同，它会将URL中的所有特殊字符都进行转义，以确保URL的完全正确性。这包括将保留字符（如冒号、斜杠、问号等）也进行编码。</li>\n</ul>\n<h5 id=\"rabbit加密\"><a href=\"#rabbit加密\" class=\"headerlink\" title=\"rabbit加密\"></a>rabbit加密</h5><p>题目提示和兔子有关时使用。</p>\n<h5 id=\"OoK加密\"><a href=\"#OoK加密\" class=\"headerlink\" title=\"OoK加密\"></a>OoK加密</h5><p>brainfuck语言用&gt; &lt; + - . , [ ]八种符号来替换C语言的各种语法和命令：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">例如： +++++++++++++++++.&gt;+++++++++++++++++++++++++++++++++++++++++</code></pre>\n\n<p>ook密码中有大量ook，加上一些符号； Ook! has only three distinct syntax elements: Ook. Ook? Ook!<br>这种就是ook密码。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://www.splitbrain.org/services/ook\">https://www.splitbrain.org/services/ook</a></p></blockquote>\n<h4 id=\"常见的文件头和文件尾\"><a href=\"#常见的文件头和文件尾\" class=\"headerlink\" title=\"常见的文件头和文件尾\"></a>常见的文件头和文件尾</h4><h5 id=\"图片文件\"><a href=\"#图片文件\" class=\"headerlink\" title=\"图片文件\"></a>图片文件</h5><ul>\n<li>JPEG：文件头：<code>FF D8 FF</code>，文件尾：<code>FF D9</code></li>\n<li>TGA：未压缩的前4字节：<code>00 00 02 00</code>，RLE压缩的前5字节：<code>00 00 10 00 00</code></li>\n<li>PNG：文件头：<code>89 50 4E 47 0D 0A 1A 0A</code>，文件尾：<code>AE 42 60 82</code></li>\n<li>GIF：文件头：<code>47 49 46 38 39(37) 61</code>，文件尾：<code>00 3B</code></li>\n<li>BMP：文件头：<code>42 4D</code></li>\n<li>TIFF (tif)：文件头：<code>49 49 2A 00</code></li>\n<li>ICO：文件头：<code>00 00 01 00</code></li>\n<li>Adobe Photoshop (psd)：文件头：<code>38 42 50 53</code></li>\n</ul>\n<h5 id=\"Office文件\"><a href=\"#Office文件\" class=\"headerlink\" title=\"Office文件\"></a>Office文件</h5><ul>\n<li>MS Word&#x2F;Excel (xls.or.doc)：文件头：<code>D0 CF 11 E0</code></li>\n<li>MS Access (mdb)：文件头：<code>53 74 61 6E 64 61 72 64 20 4A</code></li>\n<li>WordPerfect (wpd)：文件头：<code>FF 57 50 43</code></li>\n<li>Adobe Acrobat (pdf)：文件头：<code>25 50 44 46 2D 31 2E</code></li>\n<li>application&#x2F;vnd.visio(vsd)：文件头：<code>D0 CF 11 E0 A1 B1 1A E1</code></li>\n<li>Email [thorough only] (eml)：文件头：<code>44 65 6C 69 76 65 72 79 2D 64 61 74 65 3A</code></li>\n<li>Outlook Express (dbx)：文件头：<code>CF AD 12 FE C5 FD 74 6F</code></li>\n<li>Outlook (pst)：文件头：<code>21 42 44 4E</code></li>\n<li>Rich Text Format (rtf)：文件头：<code>7B 5C 72 74 66</code></li>\n<li>TXT 文件(txt)：Unicode：<code>FE FF</code>，Unicode big endian：<code>FF FE</code>，UTF-8：<code>EF BB BF</code>，ANSI编码是没有文件头的</li>\n</ul>\n<h5 id=\"压缩包文件\"><a href=\"#压缩包文件\" class=\"headerlink\" title=\"压缩包文件\"></a>压缩包文件</h5><ul>\n<li>ZIP Archive (zip)：文件头：<code>50 4B 03 04</code>，文件尾：<code>50 4B</code></li>\n<li>RAR Archive (rar)：文件头：<code>52 61 72 21</code></li>\n</ul>\n<h5 id=\"音频文件\"><a href=\"#音频文件\" class=\"headerlink\" title=\"音频文件\"></a>音频文件</h5><ul>\n<li>Wave (wav)：文件头：<code>57 41 56 45</code></li>\n<li>audio(Audio)：文件头：<code>4D 54 68 64</code></li>\n<li>audio&#x2F;x-aac（aac）：文件头：<code>FF F1(9)</code></li>\n</ul>\n<h5 id=\"视频文件\"><a href=\"#视频文件\" class=\"headerlink\" title=\"视频文件\"></a>视频文件</h5><ul>\n<li>AVI (avi)：文件头：<code>41 56 49 20</code></li>\n<li>Real Audio (ram)：文件头：<code>2E 72 61 FD</code></li>\n<li>Real Media (rm)：文件头：<code>2E 52 4D 46</code></li>\n<li>MPEG (mpg)：文件头：<code>00 00 01 BA(3)</code></li>\n<li>Quicktime (mov)：文件头：<code>6D 6F 6F 76</code></li>\n<li>Windows Media (asf)：文件头：<code>30 26 B2 75 8E 66 CF 11</code></li>\n<li>MIDI (mid)：文件头：<code>4D 54 68 64</code></li>\n</ul>\n<h5 id=\"代码文件\"><a href=\"#代码文件\" class=\"headerlink\" title=\"代码文件\"></a>代码文件</h5><ul>\n<li>XML (xml)：文件头：<code>3C 3F 78 6D 6C</code></li>\n<li>HTML (html)：文件头：<code>68 74 6D 6C 3E</code></li>\n</ul>\n<h5 id=\"其他类型\"><a href=\"#其他类型\" class=\"headerlink\" title=\"其他类型\"></a>其他类型</h5><ul>\n<li>Quicken (qdf)：文件头：<code>AC 9E BD 8F</code></li>\n<li>Windows Password (pwl)：文件头：<code>E3 82 85 96</code></li>\n<li>Windows证书文件(der)：文件头：<code>30 82 03 C9</code></li>\n<li>CAD (dwg)：文件头：<code>41 43 31 30</code></li>\n<li>Windows Shortcut (lnk)：文件头：<code>4C 00 00 00</code></li>\n<li>Windows reg(reg)：文件头：<code>52 45 47 45 44 49 54 34</code></li>\n</ul>\n<h4 id=\"exiftool-查看图片信息\"><a href=\"#exiftool-查看图片信息\" class=\"headerlink\" title=\"exiftool 查看图片信息\"></a>exiftool 查看图片信息</h4><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ exiftool photo.jpg #查看所有信息\n$ exiftool -a -u -g1 photo.jpg #查看所有元信息，包括重复和未知标签，并按小组排列\n$ exiftool -s -ImageSize -ExposureTime photo.jpg #查看图片尺寸\n$ exiftool -gps:all&#x3D;&quot;&quot; photo.jpg  #有些相机会记录拍照时的GPS定位信息。如果你不希望别人看到使用该命令删除gps信息\n$ exiftool -all&#x3D;&quot;&quot; photo.jpg  #删除所有信息\n$ exiftool -all&#x3D;&quot;&quot; --exif:all photo.jpg  #删除EXIF以外的所有信息\n\n# 将文件名（带日期的）设置到图片日期中（程序会自动识别日期格式）\n$ exiftool &quot;-DateTimeOriginal&lt;filename&quot; &quot;2009-09-30 15-28-16.jpg&quot;\n# 将文件名设置为文件大小（带格式）\n$ exiftool &quot;-filename&lt;%f_$imagesize.%e&quot; IMG_0894.JPG</code></pre>\n\n<h4 id=\"组合拳\"><a href=\"#组合拳\" class=\"headerlink\" title=\"组合拳\"></a>组合拳</h4><h5 id=\"01\"><a href=\"#01\" class=\"headerlink\" title=\"01\"></a>01</h5><p>文件分离png和rar，png在kali里打不开，<br>rar加密，png修改宽高得到密码，<br>rar解密解压得到.pcapng格式的流量包，<br>流量中搜索关键字png追踪流得到flag。</p>\n<h5 id=\"02\"><a href=\"#02\" class=\"headerlink\" title=\"02\"></a>02</h5><p>伪加密嵌套真加密，<br>修复伪加密后得到真加密的压缩包和一个word文档，<br>密码在word隐写中，多次解密，得到真加密的密码。<br>解压真加密的压缩包，得到音频文件，<br>产看音频文件频谱图得到flag。</p>\n","feature":false,"text":" 杂项真的很杂，但也有规律可循。温故知新，是一些零零碎碎的做题笔记。 新的盐图片宽高错误有一张png图片在kali打不开，简单尝试无果，转到Windows用stegsolve打开，找到file format模块，发现CRC校验不正确；用winhex或者010editor打开图片，...","link":"","photos":[],"count_time":{"symbolsCount":"23k","symbolsTime":"21 mins."},"categories":[{"name":"文章","slug":"文章","count":13,"path":"api/categories/文章.json"}],"tags":[{"name":"杂项","slug":"杂项","count":3,"path":"api/tags/杂项.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B0%E7%9A%84%E7%9B%90\"><span class=\"toc-text\">新的盐</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%9B%BE%E7%89%87%E5%AE%BD%E9%AB%98%E9%94%99%E8%AF%AF\"><span class=\"toc-text\">图片宽高错误</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#pyc%E5%8F%8D%E7%BC%96%E8%AF%91\"><span class=\"toc-text\">pyc反编译</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%94%A8strings%E5%91%BD%E4%BB%A4%E4%BB%8E%E6%B5%81%E9%87%8F%E5%8C%85%E6%89%BEflag\"><span class=\"toc-text\">用strings命令从流量包找flag</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E7%94%A8-strings-%E5%91%BD%E4%BB%A4%E8%AF%BB%E5%8F%96-elf-%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">用 strings 命令读取 elf 文件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#evince-%E5%92%8C-okular-%E6%89%93%E5%BC%80-pdf-%E9%83%BD%E5%BE%88%E5%A5%BD%E7%94%A8\"><span class=\"toc-text\">evince 和 okular 打开 pdf 都很好用</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#stegsolve-%E6%89%BE%E5%88%B0%E7%9A%84%E4%BA%8C%E7%BB%B4%E7%A0%81%E6%89%AB%E4%B8%8D%E5%87%BA%E6%9D%A5\"><span class=\"toc-text\">stegsolve 找到的二维码扫不出来</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%EF%BC%9A%E6%97%B6%E9%97%B4%E5%88%BA%E5%AE%A2%EF%BC%81\"><span class=\"toc-text\">题目：时间刺客！</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%EF%BC%9Asteg-%E6%B2%A1%E6%9C%89-py\"><span class=\"toc-text\">题目：steg 没有 py</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%EF%BC%9A%E6%9D%A5%E8%87%AA%E9%93%B6%E6%B2%B3%E7%9A%84%E4%BF%A1%E5%8F%B7\"><span class=\"toc-text\">题目：来自银河的信号</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8GPS%E6%95%B0%E6%8D%AE%E7%BB%98%E5%88%B6%E8%BF%90%E5%8A%A8%E8%BD%A8%E8%BF%B9\"><span class=\"toc-text\">利用GPS数据绘制运动轨迹</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8%E5%B7%A5%E5%85%B7%E8%BF%9B%E8%A1%8C%E6%96%87%E4%BB%B6%E5%88%86%E7%A6%BB\"><span class=\"toc-text\">利用工具进行文件分离</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E5%88%86%E7%A6%BB-binwalk-dd\"><span class=\"toc-text\">文件分离 binwalk + dd</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#binwalk-%E6%8F%90%E5%8F%96%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">binwalk 提取文件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#foremost-%E5%88%86%E5%89%B2%E6%96%87%E4%BB%B6-x2F-%E4%BF%AE%E5%A4%8D%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">foremost 分割文件 &#x2F; 修复文件</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A0%B4%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%8C%85%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">破解压缩包密码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#zip-%E5%92%8C-rar-%E8%A7%A3%E5%8E%8B\"><span class=\"toc-text\">zip 和 rar 解压</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%8E%8B%E7%BC%A9%E5%8C%85%E4%BC%AA%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">压缩包伪加密</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#a-%E5%8E%8B%E7%BC%A9%E6%BA%90%E6%96%87%E4%BB%B6%E6%95%B0%E6%8D%AE%E5%8C%BA\"><span class=\"toc-text\">a.压缩源文件数据区</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#b-%E5%8E%8B%E7%BC%A9%E6%BA%90%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E5%8C%BA\"><span class=\"toc-text\">b.压缩源文件目录区</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#c-%E5%8E%8B%E7%BC%A9%E6%BA%90%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9D%9F%E6%A0%87%E5%BF%97\"><span class=\"toc-text\">c.压缩源文件目录结束标志</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%AF%86%E5%88%AB%E7%9C%9F%E5%81%87%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">识别真假加密</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#john-%E7%A0%B4%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%8C%85%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">john 破解压缩包密码</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#hashcat-%E7%BB%93%E5%90%88-john-%E7%A0%B4%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%8C%85%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">hashcat 结合 john 破解压缩包密码</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#fcrackzip-%E7%A0%B4%E8%A7%A3%E5%8E%8B%E7%BC%A9%E5%8C%85%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">fcrackzip 破解压缩包密码</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Windows-%E7%9A%84-ARCHPR\"><span class=\"toc-text\">Windows 的 ARCHPR</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#stegslove-%E5%B7%A5%E5%85%B7%E7%9A%84%E5%88%A9%E7%94%A8\"><span class=\"toc-text\">stegslove 工具的利用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#stegsolve-%E7%9A%84%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">stegsolve 的基本使用</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#stegsolve-%E8%A7%A3%E5%86%B3-lsb-%E9%9A%90%E5%86%99\"><span class=\"toc-text\">stegsolve 解决 lsb 隐写</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#stegsolve-%E5%B0%86%E4%B8%A4%E5%BC%A0%E5%9B%BE%E7%89%87%E6%B7%B7%E5%90%88\"><span class=\"toc-text\">stegsolve 将两张图片混合</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#zsteg-%E5%88%86%E6%9E%90%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99\"><span class=\"toc-text\">zsteg 分析图片隐写</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85zsteg\"><span class=\"toc-text\">安装zsteg</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#zsteg%E7%9A%84%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">zsteg的用法</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#zsteg%E5%AE%9E%E4%BE%8B%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">zsteg实例使用</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#convert-%E5%88%86%E7%A6%BB-gif-amp-amp-montage-%E5%9B%BE%E7%89%87%E6%8B%BC%E6%8E%A5\"><span class=\"toc-text\">convert 分离 gif &amp;&amp; montage 图片拼接</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#convert%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">convert命令的基本用法</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#montage%E5%91%BD%E4%BB%A4%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">montage命令的基本用法</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E4%B8%80%E4%BA%9B%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E7%9A%84%E9%9A%90%E5%86%99\"><span class=\"toc-text\">其他一些文件格式的隐写</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#mp3%E6%96%87%E4%BB%B6private-bit%E9%9A%90%E5%86%99\"><span class=\"toc-text\">mp3文件private bit隐写</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#word-%E9%9A%90%E5%86%99\"><span class=\"toc-text\">word 隐写</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%88%A9%E7%94%A8-audacity-%E8%A7%A3%E5%86%B3%E9%9F%B3%E9%A2%91%E9%9A%90%E5%86%99\"><span class=\"toc-text\">利用 audacity 解决音频隐写</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#usb-%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90\"><span class=\"toc-text\">usb 流量分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#tshark-%E7%9A%84%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">tshark 的用法</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%BA%9B%E7%BC%96%E7%A0%81%E4%B8%8E%E5%8A%A0%E5%AF%86%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">一些编码与加密方式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#HTML-%E5%AE%9E%E4%BD%93%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">HTML 实体编码</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#base64-%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%BC%96%E7%A0%81%E5%92%8C%E8%A7%A3%E7%A0%81\"><span class=\"toc-text\">base64 命令行编码和解码</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#01248-%E5%AF%86%E7%A0%81-%E4%BA%91%E5%BD%B1%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">01248 密码( 云影密码 )</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Affine%E5%AF%86%E7%A0%81-%E4%BB%BF%E5%B0%84%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">Affine密码(仿射密码)</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#base%E5%AE%B6%E6%97%8F\"><span class=\"toc-text\">base家族</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#base16-%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">base16 编码</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#base32-%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">base32 编码</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#base64-%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">base64 编码</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#base36-%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">base36 编码</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#base45-%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">base45 编码</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#base58-%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">base58 编码</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#base62-%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">base62 编码</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#base85-%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">base85 编码</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#base91-%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">base91 编码</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#base92-%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">base92 编码</span></a></li><li class=\"toc-item toc-level-6\"><a class=\"toc-link\" href=\"#base94-%E7%BC%96%E7%A0%81\"><span class=\"toc-text\">base94 编码</span></a></li></ol></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%9F%B9%E6%A0%B9%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">培根密码</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%87%AF%E6%92%92%E5%AF%86%E7%A0%81\"><span class=\"toc-text\">凯撒密码</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#encodeURL-%E5%92%8C-encodeURLComponent-%E7%9A%84%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">encodeURL 和 encodeURLComponent 的区别</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#rabbit%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">rabbit加密</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#OoK%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">OoK加密</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E8%A7%81%E7%9A%84%E6%96%87%E4%BB%B6%E5%A4%B4%E5%92%8C%E6%96%87%E4%BB%B6%E5%B0%BE\"><span class=\"toc-text\">常见的文件头和文件尾</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%9B%BE%E7%89%87%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">图片文件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#Office%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">Office文件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%8E%8B%E7%BC%A9%E5%8C%85%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">压缩包文件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E9%9F%B3%E9%A2%91%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">音频文件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E8%A7%86%E9%A2%91%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">视频文件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">代码文件</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">其他类型</span></a></li></ol></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#exiftool-%E6%9F%A5%E7%9C%8B%E5%9B%BE%E7%89%87%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">exiftool 查看图片信息</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%84%E5%90%88%E6%8B%B3\"><span class=\"toc-text\">组合拳</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#01\"><span class=\"toc-text\">01</span></a></li><li class=\"toc-item toc-level-5\"><a class=\"toc-link\" href=\"#02\"><span class=\"toc-text\">02</span></a></li></ol></li></ol>","author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"学习笔记_pwn_前置知识","uid":"c73e3f9c5f4b12ffaf59a917c0b0e6c2","slug":"学习笔记_pwn_前置知识","date":"2023-08-25T12:30:34.000Z","updated":"2023-09-10T10:30:07.342Z","comments":true,"path":"api/articles/学习笔记_pwn_前置知识.json","keywords":null,"cover":"../picture/33.jpg","text":" 学习网站：https://ctf-wiki.org/pwn/linux/user-mode/environment/推荐课程：https://www.bilibili.com/video/BV1mr4y1Y7fW/ 前置知识 学 pwn 之前先学 8086汇编就可以。 概述 破...","link":"","photos":[],"count_time":{"symbolsCount":"6.3k","symbolsTime":"6 mins."},"categories":[{"name":"学习笔记","slug":"学习笔记","count":11,"path":"api/categories/学习笔记.json"}],"tags":[{"name":"pwn","slug":"pwn","count":2,"path":"api/tags/pwn.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{"title":"杂项摆烂的小记_基础篇_03","uid":"faf6da1b45f063e4da641b33779c9791","slug":"杂项摆烂小记03","date":"2023-08-25T12:30:34.000Z","updated":"2023-09-09T09:40:04.931Z","comments":true,"path":"api/articles/杂项摆烂小记03.json","keywords":null,"cover":"../picture/31.jpg","text":" 这里是杂项难度3的题，虽然这个难度其实没有意义。已经完成112道题了，学习到了很多新的东西，继续加油吧，少年！ 新的盐.swf文件查看帧swf文件，用PotPlayer打开可以进行每一帧的遍历 xortool（异或工具）xortool是一个多字节异或加密破解工具。 github...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"文章","slug":"文章","count":13,"path":"api/categories/文章.json"}],"tags":[{"name":"杂项","slug":"杂项","count":3,"path":"api/tags/杂项.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"../picture/head_01.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false}}