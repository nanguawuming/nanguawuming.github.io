{"title":"c语言结构体学习笔记","uid":"8a3830d891cf75c658e600bceb062e8e","slug":"c语言_01","date":"2023-04-23T03:20:34.000Z","updated":"2023-07-29T03:50:43.147Z","comments":true,"path":"api/articles/c语言_01.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/nanguawuming/CDN@1.0/picture/7.jpg","content":"<h2 id=\"结构体\"><a href=\"#结构体\" class=\"headerlink\" title=\"结构体\"></a>结构体</h2><h4 id=\"结构体声明\"><a href=\"#结构体声明\" class=\"headerlink\" title=\"结构体声明\"></a>结构体声明</h4><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">struct 结构体名称\n&#123;\n    结构体成员1;\n    结构体成员2;\n    结构体成员3;\n&#125;;</code></pre>\n\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">例：\nstruct Book\n&#123;\n    char title[128];\n    char author[40];\n    float price;\n    unsigned int date;\n    char publisher[40];\n&#125;;</code></pre>\n\n<h4 id=\"定义结构体类型变量\"><a href=\"#定义结构体类型变量\" class=\"headerlink\" title=\"定义结构体类型变量\"></a>定义结构体类型变量</h4><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">struct 结构体名称 结构体变量名</code></pre>\n\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n\nstruct Book\n&#123;\n    char title[128];\n    char author[40];\n    float price;\n    unsigned int date;\n    char publisher[40];\n&#125; book;\n\nint main(void)\n&#123;\n    &#x2F;&#x2F; struct Book book;\n\n    return 0;\n&#125;\n</code></pre>\n\n<h4 id=\"访问结构体变量\"><a href=\"#访问结构体变量\" class=\"headerlink\" title=\"访问结构体变量\"></a>访问结构体变量</h4><pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">#include &lt;stdio.h&gt;\n\nstruct Book\n&#123;\n    char title[128];\n    char author[40];\n    float price;\n    unsigned int date;\n    char publisher[40];\n&#125; book;\n\nint main(void)\n&#123;\n    printf(&quot;请输入书名：&quot;);\n    scanf(&quot;%s&quot;, book.title);\n    printf(&quot;请输入作者：&quot;);\n    scanf(&quot;%s&quot;, book.author);\n    printf(&quot;请输入售价：&quot;);\n    scanf(&quot;%f&quot;, &amp;book.price);\n    printf(&quot;请输入出版日期：&quot;);\n    scanf(&quot;%d&quot;, &amp;book.date);\n    printf(&quot;请输入出版社：&quot;);\n    scanf(&quot;%s&quot;, book.publisher);\n\n    printf(&quot;\\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;数据录入完毕&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\\n&quot;);\n\n    printf(&quot;书名：%s\\n&quot;, book.title);\n    printf(&quot;作者：%s\\n&quot;, book.author);\n    printf(&quot;售价：%.2f\\n&quot;, book.price);\n    printf(&quot;出版日期：%d\\n&quot;, book.date);\n    printf(&quot;出版社：%s\\n&quot;, book.publisher);\n\n    return 0;\n&#125;</code></pre>\n\n<h4 id=\"初始化结构体变量\"><a href=\"#初始化结构体变量\" class=\"headerlink\" title=\"初始化结构体变量\"></a>初始化结构体变量</h4><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">struct Book book &#x3D; &#123;\n    &quot;书名&quot;,           &#x2F;&#x2F; char title[128];\n    &quot;作者&quot;,           &#x2F;&#x2F; char author[40];\n    48.8,            &#x2F;&#x2F; float price;\n    20221212,        &#x2F;&#x2F; unsigned int date;\n    &quot;出版社&quot;         &#x2F;&#x2F; char publisher[40];\n&#125;;</code></pre>\n\n<h4 id=\"初始化结构体的指定成员值\"><a href=\"#初始化结构体的指定成员值\" class=\"headerlink\" title=\"初始化结构体的指定成员值\"></a>初始化结构体的指定成员值</h4><pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">struct Book book &#x3D; &#123;\n    .price &#x3D; 48.8,\n    .publisher &#x3D; &quot;出版社&quot;,\n    .date &#x3D; 20221212\n&#125;;</code></pre>\n\n<h4 id=\"例题\"><a href=\"#例题\" class=\"headerlink\" title=\"例题\"></a>例题</h4><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n\nint main(void)&#123;\n    struct A\n    &#123;\n        char a;\n        int b;\n        char c;\n    &#125; a &#x3D; &#123;&#39;x&#39;, 520, &#39;o&#39;&#125;;\n\n    printf(&quot;size of a &#x3D; %d \\n&quot;, sizeof(a));\n\n    return 0;\n&#125;\n\n&#x2F;&#x2F; 输出结果为: size of a &#x3D; 12\n&#x2F;&#x2F; 内存对齐 1 4 1 -&gt; 4 4 4\n\n#include &lt;stdio.h&gt;\n\nint main(void)&#123;\n    struct A\n    &#123;\n        char a;\n        char c;\n        int b; \n    &#125; a &#x3D; &#123;&#39;x&#39;, &#39;o&#39;, 520&#125;;\n\n    printf(&quot;size of a &#x3D; %d \\n&quot;, sizeof(a));\n\n    return 0;\n&#125;\n\n&#x2F;&#x2F; 输出结果为: size of a &#x3D; 12\n&#x2F;&#x2F; 内存对齐 1 1 4 -&gt; 4 4 </code></pre>\n\n<h4 id=\"结构体嵌套\"><a href=\"#结构体嵌套\" class=\"headerlink\" title=\"结构体嵌套\"></a>结构体嵌套</h4><pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">#include &lt;stdio.h&gt;\n\nstruct Date\n&#123;\n    int year;\n    int month;\n    int day;\n&#125;;\n\nstruct Book\n&#123;\n    char title[128];\n    char author[40];\n    float price;\n    struct Date date;\n    char publisher[40];\n&#125; book &#x3D; &#123;\n    &quot;书名&quot;，\n    &quot;作者&quot;,\n    48.8,\n    &#123;2022，12，12&#125;,\n    &quot;出版社&quot;\n&#125;;\n\nint main(void)\n&#123;\n    printf(&quot;书名：%s\\n&quot;, book.title);\n    printf(&quot;作者：%s\\n&quot;, book.author);\n    printf(&quot;售价：%.2f\\n&quot;, book.price);\n    printf(&quot;出版日期：%d-%d-%d\\n&quot;, book.date.year, book.date.month, book.date.day);\n    printf(&quot;出版社：%s\\n&quot;, book.publisher);\n\n    return 0;\n&#125;</code></pre>\n\n<h4 id=\"结构体数组\"><a href=\"#结构体数组\" class=\"headerlink\" title=\"结构体数组\"></a>结构体数组</h4><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">· 第一种方法是在声明结构体的时候进行定义：\n&#x2F;&#x2F; struct 结构体名称\n&#x2F;&#x2F; &#123;\n&#x2F;&#x2F;     结构体成员;\n&#x2F;&#x2F; &#125; 数组名[长度];\n\n· 第二种方法是先声明一个结构体类型（比如上面的Book），再用此类型定义一个结构体数组：\n&#x2F;&#x2F; struct 结构体名称\n&#x2F;&#x2F; &#123;\n&#x2F;&#x2F;     结构体成员;\n&#x2F;&#x2F; &#125;;\n&#x2F;&#x2F; struct 结构体名称 数组名[长度];</code></pre>\n\n<h4 id=\"结构体指针\"><a href=\"#结构体指针\" class=\"headerlink\" title=\"结构体指针\"></a>结构体指针</h4><pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">struct Book * pt;\npt &#x3D; &amp;book;</code></pre>\n\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">通过结构体指针访问结构体成员有两种方法：\n(*结构体指针).成员名\n结构体指针-&gt;成员名</code></pre>\n\n<pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">#include &lt;stdio.h&gt;\n\nstruct Date\n&#123;\n    int year;\n    int month;\n    int day;\n&#125;;\n\nstruct Book\n&#123;\n    char title[128];\n    char author[40];\n    float price;\n    struct Date date;\n    char publisher[40];\n&#125; book &#x3D; &#123;\n    &quot;书名&quot;，\n    &quot;作者&quot;,\n    48.8,\n    &#123;2022，12，12&#125;,\n    &quot;出版社&quot;\n&#125;;\n\nint main(void)\n&#123;\n    struct Book *pt;\n    pt &#x3D; &amp;book;\n\n    printf(&quot;书名：%s\\n&quot;, (*pt).title);\n    printf(&quot;作者：%s\\n&quot;, (*pt).author);\n    printf(&quot;售价：%.2f\\n&quot;, (*pt).price);\n    printf(&quot;出版日期：%d-%d-%d\\n&quot;, (*pt).date.year, (*pt).date.month, (*pt).date.day);\n    printf(&quot;出版社：%s\\n&quot;, (*pt).publisher);\n\n    return 0;\n&#125;</code></pre>\n\n<h4 id=\"传递结构体变量\"><a href=\"#传递结构体变量\" class=\"headerlink\" title=\"传递结构体变量\"></a>传递结构体变量</h4><pre class=\"line-numbers language-C\" data-language=\"C\"><code class=\"language-C\">#include &lt;stdio.h&gt;\n\nint main(void)\n&#123;\n    struct Test\n    &#123;\n        int x;\n        int y;\n    &#125;t1, t2;\n\n    t1.x &#x3D; 3;\n    t1.y &#x3D; 4;\n\n    t2 &#x3D; t1;\n\n    printf(&quot;t2.x &#x3D; %d, t2.y &#x3D; %d \\n&quot;, t2.x, t2.y);\n\n    return 0;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n\nstruct Date\n&#123;\n    int year;\n    int month;\n    int day;\n&#125;;\n\nstruct Book\n&#123;\n    char title[128];\n    char author[40];\n    float price;\n    struct Date date;\n    char publisher[40];\n&#125;;\n\nstruct Book getInput(struct Book book);\n\nstruct Book getInput(struct Book book)\n&#123;\n     printf(&quot;请输入书名：&quot;);\n    scanf(&quot;%s&quot;, book.title);\n    printf(&quot;请输入作者：&quot;);\n    scanf(&quot;%s&quot;, book.author);\n    printf(&quot;请输入售价：&quot;);\n    scanf(&quot;%f&quot;, &amp;book.price);\n    printf(&quot;请输入出版日期：&quot;);\n    scanf(&quot;%d-%d-%d&quot;, &amp;book.date.year, &amp;book.date.month, &amp;book.date.day);\n    printf(&quot;请输入出版社：&quot;);\n    scanf(&quot;%s&quot;, book.publisher);\n\n    return book;\n&#125;\n\nvoid printBook(struct Book book);\n\nvoid printBook(struct Book book)\n&#123;\n    printf(&quot;书名：%s\\n&quot;, book.title);\n    printf(&quot;作者：%s\\n&quot;, book.author);\n    printf(&quot;售价：%.2f\\n&quot;, book.price);\n    printf(&quot;出版日期：%d-%d-%d\\n&quot;, book.date.year, book.date.month, book.date.day);\n    printf(&quot;出版社：%s\\n&quot;, book.publisher);\n&#125;\n\nint main(void)\n&#123;\n    struct Book b1,b2;\n\n    printf(&quot;请录入第一本书的信息...\\n&quot;);\n\n    b1 &#x3D; getInput(b1);\n\n    putchar(&#39;\\n&#39;);\n\n    printf(&quot;请输入第二本书的信息...\\n&quot;);\n\n    b2 &#x3D; getInput(b2);\n\n    printf(&quot;\\n\\n录入完毕，现在开始打印验证\\n\\n&quot;);\n\n    printf(&quot;打印第一本书的信息：&quot;);\n\n    printBook(b1);\n\n    printf(&quot;打印第二本书的信息：&quot;);\n\n    putchar(&#39;\\n&#39;);\n\n    printBook(b2);\n\n    return 0;\n&#125;\n</code></pre>\n\n<h4 id=\"传递指向结构体变量的指针\"><a href=\"#传递指向结构体变量的指针\" class=\"headerlink\" title=\"传递指向结构体变量的指针\"></a>传递指向结构体变量的指针</h4><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">· 一切为了效率</code></pre>\n\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n\nstruct Date\n&#123;\n    int year;\n    int month;\n    int day;\n&#125;;\n\nstruct Book\n&#123;\n    char title[128];\n    char author[40];\n    float price;\n    struct Date date;\n    char publisher[40];\n&#125;;\n\nvoid getInput(struct Book *book);\n\nvoid getInput(struct Book *book)\n&#123;\n     printf(&quot;请输入书名：&quot;);\n    scanf(&quot;%s&quot;, book-&gt;title);\n    printf(&quot;请输入作者：&quot;);\n    scanf(&quot;%s&quot;, book-&gt;author);\n    printf(&quot;请输入售价：&quot;);\n    scanf(&quot;%f&quot;, &amp;book-&gt;price);\n    printf(&quot;请输入出版日期：&quot;);\n    scanf(&quot;%d-%d-%d&quot;, &amp;book-&gt;date.year, &amp;book-&gt;date.month, &amp;book-&gt;date.day);\n    printf(&quot;请输入出版社：&quot;);\n    scanf(&quot;%s&quot;, book-&gt;publisher);\n&#125;\n\nvoid printBook(struct Book *book);\n\nvoid printBook(struct Book *book)\n&#123;\n    printf(&quot;书名：%s\\n&quot;, book-&gt;title);\n    printf(&quot;作者：%s\\n&quot;, book-&gt;author);\n    printf(&quot;售价：%.2f\\n&quot;, book-&gt;price);\n    printf(&quot;出版日期：%d-%d-%d\\n&quot;, book-&gt;date.year, book-&gt;date.month, book-&gt;date.day);\n    printf(&quot;出版社：%s\\n&quot;, book-&gt;publisher);\n&#125;\n\nint main(void)\n&#123;\n    struct Book b1,b2;\n\n    printf(&quot;请录入第一本书的信息...\\n&quot;);\n\n    getInput(&amp;b1);\n\n    putchar(&#39;\\n&#39;);\n\n    printf(&quot;请输入第二本书的信息...\\n&quot;);\n\n    getInput(&amp;b2);\n\n    printf(&quot;\\n\\n录入完毕，现在开始打印验证\\n\\n&quot;);\n\n    printf(&quot;打印第一本书的信息：&quot;);\n\n    printBook(&amp;b1);\n\n    printf(&quot;打印第二本书的信息：&quot;);\n\n    putchar(&#39;\\n&#39;);\n\n    printBook(&amp;b2);\n\n    return 0;\n&#125;</code></pre>\n\n<h4 id=\"动态申请结构体\"><a href=\"#动态申请结构体\" class=\"headerlink\" title=\"动态申请结构体\"></a>动态申请结构体</h4><pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">使用malloc函数为结构体分配存储空间</code></pre>\n\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nstruct Date\n&#123;\n    int year;\n    int month;\n    int day;\n&#125;;\n\nstruct Book\n&#123;\n    char title[128];\n    char author[40];\n    float price;\n    struct Date date;\n    char publisher[40];\n&#125;;\n\nvoid getInput(struct Book *book);\n\nvoid getInput(struct Book *book)\n&#123;\n     printf(&quot;请输入书名：&quot;);\n    scanf(&quot;%s&quot;, book-&gt;title);\n    printf(&quot;请输入作者：&quot;);\n    scanf(&quot;%s&quot;, book-&gt;author);\n    printf(&quot;请输入售价：&quot;);\n    scanf(&quot;%f&quot;, &amp;book-&gt;price);\n    printf(&quot;请输入出版日期：&quot;);\n    scanf(&quot;%d-%d-%d&quot;, &amp;book-&gt;date.year, &amp;book-&gt;date.month, &amp;book-&gt;date.day);\n    printf(&quot;请输入出版社：&quot;);\n    scanf(&quot;%s&quot;, book-&gt;publisher);\n&#125;\n\nvoid printBook(struct Book *book);\n\nvoid printBook(struct Book *book)\n&#123;\n    printf(&quot;书名：%s\\n&quot;, book-&gt;title);\n    printf(&quot;作者：%s\\n&quot;, book-&gt;author);\n    printf(&quot;售价：%.2f\\n&quot;, book-&gt;price);\n    printf(&quot;出版日期：%d-%d-%d\\n&quot;, book-&gt;date.year, book-&gt;date.month, book-&gt;date.day);\n    printf(&quot;出版社：%s\\n&quot;, book-&gt;publisher);\n&#125;\n\nint main(void)\n&#123;\n    struct Book *b1,*b2;\n\n    b1 &#x3D; (struct Book *)malloc(sizeof(struct Book));\n    b2 &#x3D; (struct Book *)malloc(sizeof(struct Book));\n\n    if (b1 &#x3D;&#x3D; NULL || b2 &#x3D;&#x3D; NULL)&#123;\n        printf(&quot;内存分配失败!\\n&quot;);\n        exit(1);\n    &#125;\n\n    printf(&quot;请录入第一本书的信息...\\n&quot;);\n\n    getInput(b1);\n\n    putchar(&#39;\\n&#39;);\n\n    printf(&quot;请输入第二本书的信息...\\n&quot;);\n\n    getInput(b2);\n\n    printf(&quot;\\n\\n录入完毕，现在开始打印验证\\n\\n&quot;);\n\n    printf(&quot;打印第一本书的信息：\\n&quot;);\n\n    printBook(b1);\n\n    printf(&quot;打印第二本书的信息：\\n&quot;);\n\n    putchar(&#39;\\n&#39;);\n\n    printBook(b2);\n\n    free(b1);\n    free(b2);\n\n    return 0;\n&#125;</code></pre>","feature":false,"text":"结构体结构体声明struct 结构体名称 &#123; 结构体成员1; 结构体成员2; 结构体成员3; &#125;; 例： struct Book &#123; char title[128]; char author[40]; float price; unsigned in...","link":"","photos":[],"count_time":{"symbolsCount":"9.7k","symbolsTime":"9 mins."},"categories":[{"name":"文章","slug":"文章","count":7,"path":"api/categories/文章.json"}],"tags":[{"name":"c语言基础","slug":"c语言基础","count":2,"path":"api/tags/c语言基础.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9E%84%E4%BD%93\"><span class=\"toc-text\">结构体</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9E%84%E4%BD%93%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">结构体声明</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89%E7%BB%93%E6%9E%84%E4%BD%93%E7%B1%BB%E5%9E%8B%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">定义结构体类型变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%AE%BF%E9%97%AE%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">访问结构体变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">初始化结构体变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96%E7%BB%93%E6%9E%84%E4%BD%93%E7%9A%84%E6%8C%87%E5%AE%9A%E6%88%90%E5%91%98%E5%80%BC\"><span class=\"toc-text\">初始化结构体的指定成员值</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E9%A2%98\"><span class=\"toc-text\">例题</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9E%84%E4%BD%93%E5%B5%8C%E5%A5%97\"><span class=\"toc-text\">结构体嵌套</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9E%84%E4%BD%93%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">结构体数组</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9E%84%E4%BD%93%E6%8C%87%E9%92%88\"><span class=\"toc-text\">结构体指针</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BC%A0%E9%80%92%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">传递结构体变量</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BC%A0%E9%80%92%E6%8C%87%E5%90%91%E7%BB%93%E6%9E%84%E4%BD%93%E5%8F%98%E9%87%8F%E7%9A%84%E6%8C%87%E9%92%88\"><span class=\"toc-text\">传递指向结构体变量的指针</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E7%94%B3%E8%AF%B7%E7%BB%93%E6%9E%84%E4%BD%93\"><span class=\"toc-text\">动态申请结构体</span></a></li></ol></li></ol></li></ol>","author":{"name":"南瓜の无名","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/nanguawuming/CDN@1.0/picture/head.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"c语言单链表学习笔记","uid":"c4486f99fe526218e19ffc91cce264f5","slug":"c语言_02","date":"2023-04-24T01:50:13.000Z","updated":"2023-07-29T04:28:22.746Z","comments":true,"path":"api/articles/c语言_02.json","keywords":null,"cover":"https://cdn.jsdelivr.net/gh/nanguawuming/CDN@1.0/picture/8.jpg","text":"单链表链表是一种常见的数据结构。根据需求，我们可以构造出单链表、双链表、循环链表和块状链表等。链表的出现很大程度上弥补了数组的先天不足。 struct Test &#123; int x; int y; struct Test *test; &#125;; 在单链表中插入元素 #...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"14 mins."},"categories":[{"name":"文章","slug":"文章","count":7,"path":"api/categories/文章.json"}],"tags":[{"name":"c语言基础","slug":"c语言基础","count":2,"path":"api/tags/c语言基础.json"}],"author":{"name":"南瓜の无名","slug":"blog-author","avatar":"https://cdn.jsdelivr.net/gh/nanguawuming/CDN@1.0/picture/head.jpg","link":"/","description":"你不需要很厉害才能开始，但你需要开始才能变得很厉害！","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},"next_post":{}}